searchNodes=[{"doc":"Compiles the Java-based Kinesis client.","ref":"Mix.Tasks.CompileKinesisClient.html","title":"Mix.Tasks.CompileKinesisClient","type":"task"},{"doc":"Callback implementation for Mix.Task.run/1.","ref":"Mix.Tasks.CompileKinesisClient.html#run/1","title":"Mix.Tasks.CompileKinesisClient.run/1","type":"function"},{"doc":"Publishes the API reference documentation (mix docs) to the gh-pages branch.Fails if the branch doesn't exist.","ref":"Mix.Tasks.PublishGhPages.html","title":"Mix.Tasks.PublishGhPages","type":"task"},{"doc":"Runs the smoke test.","ref":"Mix.Tasks.SmokeTest.html","title":"Mix.Tasks.SmokeTest","type":"task"},{"doc":"Callback implementation for Mix.Task.run/1.","ref":"Mix.Tasks.SmokeTest.html#run/1","title":"Mix.Tasks.SmokeTest.run/1","type":"function"},{"doc":"Uses actual configuration defaults for updating the operator's guide.","ref":"Mix.Tasks.UpdateDocs.html","title":"Mix.Tasks.UpdateDocs","type":"task"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#env_defaults/1","title":"Mix.Tasks.UpdateDocs.env_defaults/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#extract_keysets/2","title":"Mix.Tasks.UpdateDocs.extract_keysets/2","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#find_table_in_text/1","title":"Mix.Tasks.UpdateDocs.find_table_in_text/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#list_to_text/1","title":"Mix.Tasks.UpdateDocs.list_to_text/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#log_documented_but_missing_vars/1","title":"Mix.Tasks.UpdateDocs.log_documented_but_missing_vars/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#log_duplicate_defaults/1","title":"Mix.Tasks.UpdateDocs.log_duplicate_defaults/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#log_undocumented_vars/1","title":"Mix.Tasks.UpdateDocs.log_undocumented_vars/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#log_updated_vars/1","title":"Mix.Tasks.UpdateDocs.log_updated_vars/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#read_file/1","title":"Mix.Tasks.UpdateDocs.read_file/1","type":"function"},{"doc":"Callback implementation for Mix.Task.run/1.","ref":"Mix.Tasks.UpdateDocs.html#run/1","title":"Mix.Tasks.UpdateDocs.run/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#set_defaults/2","title":"Mix.Tasks.UpdateDocs.set_defaults/2","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#text_to_list/1","title":"Mix.Tasks.UpdateDocs.text_to_list/1","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#update_file/2","title":"Mix.Tasks.UpdateDocs.update_file/2","type":"function"},{"doc":"","ref":"Mix.Tasks.UpdateDocs.html#write_file/2","title":"Mix.Tasks.UpdateDocs.write_file/2","type":"function"},{"doc":"Uses an external endpoint for deciding authorization.","ref":"RIG.AuthorizationCheck.External.html","title":"RIG.AuthorizationCheck.External","type":"module"},{"doc":"","ref":"RIG.AuthorizationCheck.External.html#check/2","title":"RIG.AuthorizationCheck.External.check/2","type":"function"},{"doc":"","ref":"RIG.AuthorizationCheck.External.html#check_or_log/2","title":"RIG.AuthorizationCheck.External.check_or_log/2","type":"function"},{"doc":"Decides whether to accept or deny a request for publishing an event.","ref":"RIG.AuthorizationCheck.Submission.html","title":"RIG.AuthorizationCheck.Submission","type":"module"},{"doc":"","ref":"RIG.AuthorizationCheck.Submission.html#check_authorization/2","title":"RIG.AuthorizationCheck.Submission.check_authorization/2","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RIG.AuthorizationCheck.Submission.html#config/0","title":"RIG.AuthorizationCheck.Submission.config/0","type":"function"},{"doc":"Decides whether to allow or reject a subscription request.","ref":"RIG.AuthorizationCheck.Subscription.html","title":"RIG.AuthorizationCheck.Subscription","type":"module"},{"doc":"","ref":"RIG.AuthorizationCheck.Subscription.html#check_authorization/1","title":"RIG.AuthorizationCheck.Subscription.check_authorization/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RIG.AuthorizationCheck.Subscription.html#config/0","title":"RIG.AuthorizationCheck.Subscription.config/0","type":"function"},{"doc":"Module responsible to start Peerage application if relevant. Peerage will be auto-configured by values from environment variables.","ref":"RIG.Discovery.html","title":"RIG.Discovery","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RIG.Discovery.html#config/0","title":"RIG.Discovery.config/0","type":"function"},{"doc":"","ref":"RIG.Discovery.html#start/0","title":"RIG.Discovery.start/0","type":"function"},{"doc":"Distributed grow-only set with per key time-to-live support.","ref":"RIG.DistributedSet.html","title":"RIG.DistributedSet","type":"module"},{"doc":"Add a new record to this set.Re-adding already included keys may be used to extend a key's lifetime.","ref":"RIG.DistributedSet.html#add/3","title":"RIG.DistributedSet.add/3","type":"function"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RIG.DistributedSet.html#child_spec/1","title":"RIG.DistributedSet.child_spec/1","type":"function"},{"doc":"Handles adding a record, broadcasted from another node.","ref":"RIG.DistributedSet.html#handle_info/2","title":"RIG.DistributedSet.handle_info/2","type":"function"},{"doc":"Check whether this set includes a key or not.Returns true if, and only if, the key has been added previously and it has not yet expired.","ref":"RIG.DistributedSet.html#has?/3","title":"RIG.DistributedSet.has?/3","type":"function"},{"doc":"Creates a new distributed set.Parametersset_name: The name of the distributed set. Multiple instances with the same name will synchronize their records with each other.","ref":"RIG.DistributedSet.html#start_link/2","title":"RIG.DistributedSet.start_link/2","type":"function"},{"doc":"","ref":"RIG.DistributedSet.html#t:creation_ts/0","title":"RIG.DistributedSet.creation_ts/0","type":"type"},{"doc":"","ref":"RIG.DistributedSet.html#t:expiration_ts/0","title":"RIG.DistributedSet.expiration_ts/0","type":"type"},{"doc":"","ref":"RIG.DistributedSet.html#t:key/0","title":"RIG.DistributedSet.key/0","type":"type"},{"doc":"","ref":"RIG.DistributedSet.html#t:record/0","title":"RIG.DistributedSet.record/0","type":"type"},{"doc":"","ref":"RIG.DistributedSet.html#t:uuid/0","title":"RIG.DistributedSet.uuid/0","type":"type"},{"doc":"JSON Web Token handling.","ref":"RIG.JWT.html","title":"RIG.JWT","type":"behaviour"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RIG.JWT.html#config/0","title":"RIG.JWT.config/0","type":"function"},{"doc":"See RIG.JWT.Claims.encode/2.","ref":"RIG.JWT.html#encode/2","title":"RIG.JWT.encode/2","type":"function"},{"doc":"","ref":"RIG.JWT.html#parse_http_header/3","title":"RIG.JWT.parse_http_header/3","type":"function"},{"doc":"Find JWT claims in one or more HTTP headers.All &quot;Authorization&quot; headers are considered. A single header may contain one or more credentials. Only &quot;Bearer&quot;-type (scheme) credentials are interpreted as JSON Web Tokens. Each of those JWTs is validated using their signature. The result contains JWT claims for successfully validated tokens and errors where the validation failed.","ref":"RIG.JWT.html#c:parse_http_header/3","title":"RIG.JWT.parse_http_header/3","type":"callback"},{"doc":"","ref":"RIG.JWT.html#parse_token/3","title":"RIG.JWT.parse_token/3","type":"function"},{"doc":"Extract claims from a given encoded JWT.","ref":"RIG.JWT.html#c:parse_token/3","title":"RIG.JWT.parse_token/3","type":"callback"},{"doc":"","ref":"RIG.JWT.html#valid?/3","title":"RIG.JWT.valid?/3","type":"function"},{"doc":"Checks an encoded JWT for validity.","ref":"RIG.JWT.html#c:valid?/3","title":"RIG.JWT.valid?/3","type":"callback"},{"doc":"","ref":"RIG.JWT.html#t:claims/0","title":"RIG.JWT.claims/0","type":"type"},{"doc":"","ref":"RIG.JWT.html#t:claims_and_errors/0","title":"RIG.JWT.claims_and_errors/0","type":"type"},{"doc":"Turns claims into errors for blacklisted JWTs.","ref":"RIG.JWT.html#t:ensure_not_blacklisted/0","title":"RIG.JWT.ensure_not_blacklisted/0","type":"type"},{"doc":"","ref":"RIG.JWT.html#t:http_header/0","title":"RIG.JWT.http_header/0","type":"type"},{"doc":"","ref":"RIG.JWT.html#t:http_header_value/0","title":"RIG.JWT.http_header_value/0","type":"type"},{"doc":"","ref":"RIG.JWT.html#t:http_headers/0","title":"RIG.JWT.http_headers/0","type":"type"},{"doc":"","ref":"RIG.JWT.html#t:jwt_conf/0","title":"RIG.JWT.jwt_conf/0","type":"type"},{"doc":"","ref":"RIG.JWT.html#t:token/0","title":"RIG.JWT.token/0","type":"type"},{"doc":"","ref":"RIG.JWT.html#t:validation_result/0","title":"RIG.JWT.validation_result/0","type":"type"},{"doc":"Read JSON Web Tokens.","ref":"RIG.JWT.Claims.html","title":"RIG.JWT.Claims","type":"module"},{"doc":"Encode a signed JWT that wraps the given claims.","ref":"RIG.JWT.Claims.html#encode/2","title":"RIG.JWT.Claims.encode/2","type":"function"},{"doc":"Obtain JWT claims by parsing and validating a token.","ref":"RIG.JWT.Claims.html#from/2","title":"RIG.JWT.Claims.from/2","type":"function"},{"doc":"","ref":"RIG.JWT.Claims.html#t:claims/0","title":"RIG.JWT.Claims.claims/0","type":"type"},{"doc":"","ref":"RIG.JWT.Claims.html#t:jwt_conf/0","title":"RIG.JWT.Claims.jwt_conf/0","type":"type"},{"doc":"","ref":"RIG.JWT.Claims.html#t:token/0","title":"RIG.JWT.Claims.token/0","type":"type"},{"doc":"HTTP header parser.","ref":"RIG.JWT.HttpCredentials.html","title":"RIG.JWT.HttpCredentials","type":"module"},{"doc":"Finds credentials in a given HTTP header value.Unsupported credential schemes are filtered out of the result.","ref":"RIG.JWT.HttpCredentials.html#from/1","title":"RIG.JWT.HttpCredentials.from/1","type":"function"},{"doc":"","ref":"RIG.JWT.HttpCredentials.html#t:bearer/0","title":"RIG.JWT.HttpCredentials.bearer/0","type":"type"},{"doc":"","ref":"RIG.JWT.HttpCredentials.html#t:supported_credential/0","title":"RIG.JWT.HttpCredentials.supported_credential/0","type":"type"},{"doc":"Utility module for obtaining a request body.","ref":"RIG.Plug.BodyReader.html","title":"RIG.Plug.BodyReader","type":"module"},{"doc":"Reads a request body as a whole, invoking Plug.Conn.read_body/2 as often as needed.","ref":"RIG.Plug.BodyReader.html#read_full_body/1","title":"RIG.Plug.BodyReader.read_full_body/1","type":"function"},{"doc":"A session is defined by a user's JWT.Client connections with the same JWT are associated to the same session. That is, if a user uses the same JWT to connect to RIG multiple times (e.g., using multiple devices), all of those connections are associated to the same session.Sessions can be blacklisted, which makes them illegal to use for a specified amount of time. Established connections related to a blacklisted session are terminated automatically.By default, the session identifier within a JWT is the jti claim. You can change this using the JWT_SESSION_FIELD environment variable.","ref":"RIG.Session.html","title":"RIG.Session","type":"module"},{"doc":"Disallow sessions with the given name for a specific amount of time.","ref":"RIG.Session.html#blacklist/2","title":"RIG.Session.blacklist/2","type":"function"},{"doc":"Check whether a session name has been disallowed.","ref":"RIG.Session.html#blacklisted?/1","title":"RIG.Session.blacklisted?/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RIG.Session.html#config/0","title":"RIG.Session.config/0","type":"function"},{"doc":"Infers the session name from JWT claims.claims: The JWT claims map. The claim used to identify a session in an authorization token is defined by the :jwt_session_field in the module configuration.","ref":"RIG.Session.html#from_claims/1","title":"RIG.Session.from_claims/1","type":"function"},{"doc":"Associates a connection process to a session identifier.session_name: If the session with the given name doesn't exist yet, it will be created.pid: The client connection process. Once the associated session is terminated, this process will receive a {:session_killed, &lt;session name&gt;} message.","ref":"RIG.Session.html#register_connection/2","title":"RIG.Session.register_connection/2","type":"function"},{"doc":"","ref":"RIG.Session.html#t:session_name_t/0","title":"RIG.Session.session_name_t/0","type":"type"},{"doc":"","ref":"RIG.Session.html#t:validity_period_t/0","title":"RIG.Session.validity_period_t/0","type":"type"},{"doc":"Associate a connection to a session, and terminate sessions along with their associated connections.","ref":"RIG.Session.Connection.html","title":"RIG.Session.Connection","type":"module"},{"doc":"Associates a connection process with a session name.","ref":"RIG.Session.Connection.html#associate_session/2","title":"RIG.Session.Connection.associate_session/2","type":"function"},{"doc":"Tells all connection processes associated with a session name to terminate.","ref":"RIG.Session.Connection.html#terminate_all_associated_to/1","title":"RIG.Session.Connection.terminate_all_associated_to/1","type":"function"},{"doc":"Common request handler for HTTP endpoints that accept CloudEvents.The handler implements HTTP Transport Binding for CloudEvents - Version 0.2.","ref":"RIG.Sources.HTTP.Handler.html","title":"RIG.Sources.HTTP.Handler","type":"module"},{"doc":"","ref":"RIG.Sources.HTTP.Handler.html#handle_http_submission/2","title":"RIG.Sources.HTTP.Handler.handle_http_submission/2","type":"function"},{"doc":"Event subscriptions.","ref":"RIG.Subscriptions.html","title":"RIG.Subscriptions","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RIG.Subscriptions.html#config/0","title":"RIG.Subscriptions.config/0","type":"function"},{"doc":"","ref":"RIG.Subscriptions.html#from_json/1","title":"RIG.Subscriptions.from_json/1","type":"function"},{"doc":"","ref":"RIG.Subscriptions.html#from_jwt_claims/2","title":"RIG.Subscriptions.from_jwt_claims/2","type":"function"},{"doc":"","ref":"RIG.Subscriptions.html#from_token/2","title":"RIG.Subscriptions.from_token/2","type":"function"},{"doc":"","ref":"RIG.Subscriptions.html#t:claims/0","title":"RIG.Subscriptions.claims/0","type":"type"},{"doc":"","ref":"RIG.Subscriptions.html#t:jwt_conf/0","title":"RIG.Subscriptions.jwt_conf/0","type":"type"},{"doc":"Converts input into valid subscriptions.","ref":"RIG.Subscriptions.Parser.JSON.html","title":"RIG.Subscriptions.Parser.JSON","type":"module"},{"doc":"","ref":"RIG.Subscriptions.Parser.JSON.html#from_json/1","title":"RIG.Subscriptions.Parser.JSON.from_json/1","type":"function"},{"doc":"Create subscriptions based on JWT and extractor file","ref":"RIG.Subscriptions.Parser.JWT.html","title":"RIG.Subscriptions.Parser.JWT","type":"module"},{"doc":"","ref":"RIG.Subscriptions.Parser.JWT.html#from_jwt_claims/2","title":"RIG.Subscriptions.Parser.JWT.from_jwt_claims/2","type":"function"},{"doc":"Module that handle trace-context according to W3C.Accepts and forwards trace-context both from/to http endpoints and from/to event-based systems using cloudevents","ref":"RIG.Tracing.html","title":"RIG.Tracing","type":"module"},{"doc":"","ref":"RIG.Tracing.html#append_context/3","title":"RIG.Tracing.append_context/3","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RIG.Tracing.html#config/0","title":"RIG.Tracing.config/0","type":"function"},{"doc":"","ref":"RIG.Tracing.html#context/0","title":"RIG.Tracing.context/0","type":"function"},{"doc":"","ref":"RIG.Tracing.html#start/0","title":"RIG.Tracing.start/0","type":"function"},{"doc":"","ref":"RIG.Tracing.html#t:t/0","title":"RIG.Tracing.t/0","type":"type"},{"doc":"Distributed Tracing instrumenter for cloudevents","ref":"RIG.Tracing.CloudEvent.html","title":"RIG.Tracing.CloudEvent","type":"module"},{"doc":"","ref":"RIG.Tracing.CloudEvent.html#compute_context/1","title":"RIG.Tracing.CloudEvent.compute_context/1","type":"function"},{"doc":"Like Opencensus.Trace.with_child_span (https://hexdocs.pm/opencensus_elixir/Opencensus.Trace.html#with_child_span/3), but for cloudevents distributed tracing extension defined in https://github.com/cloudevents/spec/blob/master/extensions/distributed-tracing.md. This macro reads the distributed trace context from a cloudevent and creates a new span out of it.","ref":"RIG.Tracing.CloudEvent.html#with_child_span/4","title":"RIG.Tracing.CloudEvent.with_child_span/4","type":"macro"},{"doc":"Wrapper Module for Opencensus.Plug.Trace from opencensus_plug","ref":"RIG.Tracing.Plug.html","title":"RIG.Tracing.Plug","type":"module"},{"doc":"Callback implementation for Plug.call/2.","ref":"RIG.Tracing.Plug.html#call/2","title":"RIG.Tracing.Plug.call/2","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"RIG.Tracing.Plug.html#init/1","title":"RIG.Tracing.Plug.init/1","type":"function"},{"doc":"","ref":"RIG.Tracing.Plug.html#put_req_header/2","title":"RIG.Tracing.Plug.put_req_header/2","type":"function"},{"doc":"","ref":"RIG.Tracing.Plug.html#put_resp_header/2","title":"RIG.Tracing.Plug.put_resp_header/2","type":"function"},{"doc":"Callback implementation for Opencensus.Plug.Trace.span_name/2.","ref":"RIG.Tracing.Plug.html#span_name/2","title":"RIG.Tracing.Plug.span_name/2","type":"function"},{"doc":"Callback implementation for Opencensus.Plug.Trace.span_status/2.","ref":"RIG.Tracing.Plug.html#span_status/2","title":"RIG.Tracing.Plug.span_status/2","type":"function"},{"doc":"Tools for working with result tuples.Influenced by the Rust Option/Result implementation.","ref":"Result.html","title":"Result","type":"module"},{"doc":"Maps a Result to another Result by applying a function to a contained value, leaving non-ok tuples untouched.Note that the given function is expected to return a result. See Result.map/2 if you want to pass a function that returns a value.Examplesiex&gt; {:ok, :a} |&gt; Result.and_then(fn :a -&gt; {:ok, :b} end) {:ok, :b} iex&gt; {:ok, :a} |&gt; Result.and_then(fn :a -&gt; {:error, :b} end) {:error, :b} iex&gt; {:error, :a} |&gt; Result.and_then(fn :a -&gt; {:ok, :b} end) {:error, :a}","ref":"Result.html#and_then/2","title":"Result.and_then/2","type":"function"},{"doc":"Turns an error into a result that contains that error.If the error is already a result, it is returned unchanged.Examplesiex&gt; Result.err(:a) {:error, :a} iex&gt; Result.err(Result.err(:a)) {:error, :a}","ref":"Result.html#err/1","title":"Result.err/1","type":"function"},{"doc":"Returns false if a result has a contained value and true otherwise.Examplesiex&gt; Enum.filter([ok: 1, error: 2, ok: 3], &amp;Result.err?/1) [error: 2]","ref":"Result.html#err?/1","title":"Result.err?/1","type":"function"},{"doc":"Unwraps ok-results and rejects error-results.Examplesiex&gt; [ok: :a, ok: :b, error: :c] |&gt; Result.filter_and_unwrap() [:a, :b]","ref":"Result.html#filter_and_unwrap/1","title":"Result.filter_and_unwrap/1","type":"function"},{"doc":"Unwraps error-results and rejects ok-results.Examplesiex&gt; [ok: :a, ok: :b, error: :c] |&gt; Result.filter_and_unwrap_err() [:c]","ref":"Result.html#filter_and_unwrap_err/1","title":"Result.filter_and_unwrap_err/1","type":"function"},{"doc":"Turns a list of results into a result with lists of either values or errors.As soon as there is at least one error in the given list, the result is an error-type Result.Exampleiex&gt; [ok: :a, ok: :b] |&gt; Result.list_to_result() {:ok, [:a, :b]} iex&gt; [ok: :a, ok: :b, error: :c, error: :d] |&gt; Result.list_to_result() {:error, [:c, :d]}","ref":"Result.html#list_to_result/2","title":"Result.list_to_result/2","type":"function"},{"doc":"Maps a Result to another Result by applying a function to a contained value, leaving non-ok tuples untouched.Note that the given function is expected to return a value. See Result.and_then/2 if you want to pass a function that returns a result.Examplesiex&gt; {:ok, :a} |&gt; Result.map(fn :a -&gt; :b end) {:ok, :b} iex&gt; {:error, :a} |&gt; Result.map(fn :a -&gt; :b end) {:error, :a}","ref":"Result.html#map/2","title":"Result.map/2","type":"function"},{"doc":"Maps a Result to another Result by applying a function to a contained error, leaving ok tuples untouched.This function can be used to compose the results of two functions, where the map function returns an error.Examplesiex&gt; {:error, :a} |&gt; Result.map_err(fn :a -&gt; :b end) {:error, :b} iex&gt; {:ok, :a} |&gt; Result.map_err(fn :a -&gt; :b end) {:ok, :a}","ref":"Result.html#map_err/2","title":"Result.map_err/2","type":"function"},{"doc":"Turns a value into a result that contains that value.If the value is already a result, it is returned unchanged.Examplesiex&gt; Result.ok(:a) {:ok, :a} iex&gt; Result.ok(Result.ok(:a)) {:ok, :a}","ref":"Result.html#ok/1","title":"Result.ok/1","type":"function"},{"doc":"Returns true if a result has a contained value and false otherwise.Examplesiex&gt; Enum.filter([ok: 1, error: 2, ok: 3], &amp;Result.ok?/1) [ok: 1, ok: 3] iex&gt; Enum.split_with([ok: 1, error: 2, ok: 3], &amp;Result.ok?/1) {[ok: 1, ok: 3], [error: 2]}","ref":"Result.html#ok?/1","title":"Result.ok?/1","type":"function"},{"doc":"Maps a Result to another Result by applying a function to a contained value, leaving ok tuples untouched.Note that the given function is expected to return a result. See Result.map_err/2 if you want to pass a function that returns a value.Examplesiex&gt; {:ok, :a} |&gt; Result.or_else(fn :a -&gt; {:ok, :b} end) {:ok, :a} iex&gt; {:error, :a} |&gt; Result.or_else(fn :a -&gt; {:ok, :b} end) {:ok, :b} iex&gt; {:error, :a} |&gt; Result.or_else(fn :a -&gt; {:error, :b} end) {:error, :b}","ref":"Result.html#or_else/2","title":"Result.or_else/2","type":"function"},{"doc":"Turns a result that holds a list of values or errors into a list of results.Exampleiex&gt; {:ok, [:a, :b]} |&gt; Result.result_to_list() [ok: :a, ok: :b] iex&gt; {:error, [:c, :d]} |&gt; Result.result_to_list() [error: :c, error: :d]","ref":"Result.html#result_to_list/1","title":"Result.result_to_list/1","type":"function"},{"doc":"Returns the contained value or throw an error.","ref":"Result.html#unwrap/2","title":"Result.unwrap/2","type":"function"},{"doc":"Returns the contained error or throw an error.","ref":"Result.html#unwrap_err/1","title":"Result.unwrap_err/1","type":"function"},{"doc":"Returns the contained error or a default.","ref":"Result.html#unwrap_err_or/2","title":"Result.unwrap_err_or/2","type":"function"},{"doc":"Returns the contained value or a default.","ref":"Result.html#unwrap_or/2","title":"Result.unwrap_or/2","type":"function"},{"doc":"","ref":"Result.html#t:err/0","title":"Result.err/0","type":"type"},{"doc":"","ref":"Result.html#t:err/1","title":"Result.err/1","type":"type"},{"doc":"","ref":"Result.html#t:error/0","title":"Result.error/0","type":"type"},{"doc":"","ref":"Result.html#t:fmt_errors/0","title":"Result.fmt_errors/0","type":"type"},{"doc":"","ref":"Result.html#t:ok/0","title":"Result.ok/0","type":"type"},{"doc":"","ref":"Result.html#t:ok/1","title":"Result.ok/1","type":"type"},{"doc":"","ref":"Result.html#t:t/0","title":"Result.t/0","type":"type"},{"doc":"","ref":"Result.html#t:t/2","title":"Result.t/2","type":"type"},{"doc":"","ref":"Result.html#t:value/0","title":"Result.value/0","type":"type"},{"doc":"Interface to any publish-subscribe capable broker service.","ref":"Rig.BrokerConnection.html","title":"Rig.BrokerConnection","type":"behaviour"},{"doc":"","ref":"Rig.BrokerConnection.html#c:publish/4","title":"Rig.BrokerConnection.publish/4","type":"callback"},{"doc":"","ref":"Rig.BrokerConnection.html#c:subscribe/3","title":"Rig.BrokerConnection.subscribe/3","type":"callback"},{"doc":"","ref":"Rig.BrokerConnection.html#c:unsubscribe/1","title":"Rig.BrokerConnection.unsubscribe/1","type":"callback"},{"doc":"","ref":"Rig.BrokerConnection.html#t:callback/0","title":"Rig.BrokerConnection.callback/0","type":"type"},{"doc":"","ref":"Rig.BrokerConnection.html#t:connection/0","title":"Rig.BrokerConnection.connection/0","type":"type"},{"doc":"","ref":"Rig.BrokerConnection.html#t:subscription_id/0","title":"Rig.BrokerConnection.subscription_id/0","type":"type"},{"doc":"","ref":"Rig.BrokerConnection.html#t:topic/0","title":"Rig.BrokerConnection.topic/0","type":"type"},{"doc":"Rig module configuration that provides settings/0.There are two ways to use this moduleSpecify a list of expected keysdefmodule Rig.MyExample do use Rig.Config, [:some_key, :other_key] endRig.Config expects a config entry similar to this:config :rig, Rig.MyExample, some_key: ..., other_key: ...If one of the specified keys is not found, an error is thrown at compile time. Otherwise, Rig.MyExample gets a config/0 function that returns the configuration converted to a map. If there are other keys present, they'll be added to that map as well.Specify :custom_validation insteaddefmodule Rig.MyExample do use Rig.Config, :custom_validation defp validate_config!(config) do ... end endIf you use :custom_validation, you should deal with the raw keyword list by implementing validate_config!/1 in the module.","ref":"Rig.Config.html","title":"Rig.Config","type":"module"},{"doc":"","ref":"Rig.Config.html#check_and_update_https_config/1","title":"Rig.Config.check_and_update_https_config/1","type":"function"},{"doc":"","ref":"Rig.Config.html#parse_json_env/1","title":"Rig.Config.parse_json_env/1","type":"function"},{"doc":"","ref":"Rig.Config.html#parse_socket_list/1","title":"Rig.Config.parse_socket_list/1","type":"function"},{"doc":"Encode and decode a connection token, e.g., for correlation.","ref":"Rig.Connection.Codec.html","title":"Rig.Connection.Codec","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"Rig.Connection.Codec.html#config/0","title":"Rig.Connection.Codec.config/0","type":"function"},{"doc":"Decrypts ciphertext using key. Ciphertext is init. vector, ciphertag (MAC) and the actual ciphertext concatenated.","ref":"Rig.Connection.Codec.html#decrypt/2","title":"Rig.Connection.Codec.decrypt/2","type":"function"},{"doc":"Convert a serialized string back into a pid.","ref":"Rig.Connection.Codec.html#deserialize/1","title":"Rig.Connection.Codec.deserialize/1","type":"function"},{"doc":"Convert a serialized string back into a pid.","ref":"Rig.Connection.Codec.html#deserialize!/1","title":"Rig.Connection.Codec.deserialize!/1","type":"function"},{"doc":"Encrypts value using key and returns init. vector, ciphertag (MAC) and ciphertext concatenated. Additional authenticated data (AAD) adds parameters like protocol version num. to MAC","ref":"Rig.Connection.Codec.html#encrypt/2","title":"Rig.Connection.Codec.encrypt/2","type":"function"},{"doc":"The function processes any string or number and returns exactly 16 byte binary. The hash produced by this function can be used as key by both encrypt and decrypt functions.","ref":"Rig.Connection.Codec.html#hash/1","title":"Rig.Connection.Codec.hash/1","type":"function"},{"doc":"Turn a pid into an url-encoded string.","ref":"Rig.Connection.Codec.html#serialize/1","title":"Rig.Connection.Codec.serialize/1","type":"function"},{"doc":"Check point between connection processes and event sources.Event SubscriptionsThe EventFilter is a central component to RIG's event subscription implementation. In order to understand their role, we first take a look at events and event types.Events and event typesWe're going to use the Cloud Events Spec wherever possible (see Rig.CloudEvent). For example, incoming events are expected to feature an &quot;eventType&quot; field.An &quot;official&quot; example of such an event type is com.github.pull.create. We can infer the following properties:Event types use reverse-dns notation, which means the type name contains parent-to-child relations defined by the dot character.Event types are likely going to be unrelated to specific entities or (user) sessions. For example, for a repository &quot;my-org/my-repo&quot;, we do not expect to see events like com.github.pull.create.my-org/my-repo; instead, the repository ID is likely to be found in the CloudEvent's data field (as there is no &quot;subject&quot;-like field mentioned in the spec).Following those observations/assumptions, we assume to events that look similar to the following (based on Github's get a single pull request API):{ &quot;cloudEventsVersion&quot;: &quot;0.1&quot;, &quot;eventType&quot;: &quot;com.github.pull.create&quot;, &quot;source&quot;: &quot;/desktop-app&quot;, &quot;eventID&quot;: &quot;A234-1234-1234&quot;, &quot;eventTime&quot;: &quot;2018-04-05T17:31:00Z&quot;, &quot;data&quot;: { &quot;assignee&quot;: { &quot;login&quot;: &quot;octocat&quot;, }, &quot;head&quot;: { &quot;repo&quot;: { &quot;full_name&quot;: &quot;octocat/Hello-World&quot;, }, }, &quot;base&quot;: { &quot;repo&quot;: { &quot;full_name&quot;: &quot;octocat/Hello-World&quot;, }, }, } }ExtractorsBecause of this, RIG's internal subscriptions cannot rely on the event type only. RIG is built for routing events to users' devices or sessions, so it must also have a notion of those things built into the subscription mechanism.The idea: introduce &quot;extractors&quot; that can extract information from an event, and allow subscriptions to match against that extracted information.Let's take a look at an example:Assume there is an event type com.github.pull.create;Assume the user is interested in events that refer to the &quot;octocat/Hello-World&quot;;Assume the user only interested in new pull requests assigned to the &quot;octocat&quot; user;We start RIG with an extractor configuration that uses JSON Pointer to find data:extractors: com.github.pull.create: assignee: # &quot;assignee&quot; is the field name that can be referred to in the subscription request # (see subscription request example below). # Each field has a field index value that needs to remain the same unless all RIG # nodes are stopped and restarted. This can be compared to gRPC field numbers and # the same rule of thumb applies: always append fields and never reuse a field # index/number. stable_field_index: 0 # JWT values take precedence over values given in a subscription request: jwt: # Describes where to find the value in the JWT: json_pointer: /username event: # Describes where to find the value in the event: json_pointer: /data/assignee/login head_repo: stable_field_index: 1 # This is extracted from subscription requests, rather than in the JWT. In the # request body the field is referred to by name, so a `json_pointer` is required # for the event only: event: json_pointer: /data/head/repo/full_name base_repo: stable_field_index: 2 event: json_pointer: /data/base/repo/full_nameThe extractor configuration is picked up by the Filter Supervisor Rig.EventFilter.Sup, which applies event-type specific configuration to the respective Event Filter process (GenServer) Rig.EventFilter.Server.SubscriptionsNote: see Rig.Subscription.The frontend sends a subscription that refers to those fields:{ &quot;eventType&quot;: &quot;com.github.pull.create&quot;, &quot;oneOf&quot;: [ { &quot;head_repo&quot;: &quot;octocat/Hello-World&quot; }, { &quot;base_repo&quot;: &quot;octocat/Hello-World&quot; } ] }The frontend receives the event outlined above because one of the constraint defined under oneOf is fulfilled. Note that within each constraint object, all fields must match, so the constraints are defined in conjunctive normal form.If a JSON Pointer expression returns more than one value, there is a match if, and only if, the target value is included in the JSON Pointer result list.A subscription request may contain multiple subscriptions:{ &quot;subscriptions&quot;: [ { &quot;eventType&quot;: &quot;com.github.pull.create&quot;, &quot;oneOf&quot;: [ { &quot;head_repo&quot;: &quot;octocat/Hello-World&quot; }, { &quot;base_repo&quot;: &quot;octocat/Hello-World&quot; } ] } ] }In this example, the subscription's constraints are fulfilled when either of the head_repo and base_repo fields match. If the subscription should only apply to cases where both fields match, it should look like this instead:{ &quot;subscriptions&quot;: [ { &quot;eventType&quot;: &quot;com.github.pull.create&quot;, &quot;oneOf&quot;: [ { &quot;head_repo&quot;: &quot;octocat/Hello-World&quot;, &quot;base_repo&quot;: &quot;octocat/Hello-World&quot; } ] } ] }ImplementationNote: see Rig.EventFilter.Server and Rig.EventFilter.MatchSpec.SubscriptionMatcher.Matching relies on ETS match specs - subscriptions are kept in an ETS table, for each event type. The tables contain all key/value pairs as defined in the extractor for the event type; they contain the values as defined in the subscription. If a value is not set in a subscription, the missing value is set to nil. For example, the subscription above would be reflected in two records:{connection_pid, {:assignee, &quot;octocat&quot;}, {:head_repo, &quot;octocat/Hello-World&quot;}, {:base_repo, nil}} {connection_pid, {:assignee, &quot;octocat&quot;}, {:head_repo, nil}, {:base_repo, &quot;octocat/Hello-World&quot;}}This structure allows for very efficient matching. There is also a dedicated table per event type, so ownership is easy and there are no concurrent requests per table. At the time of writing, the default limit on the number of ETS tables is 1400 per node, but this can be changed using ERL_MAX_ETS_TABLES. If that ever becomes impractical, putting all subscriptions in a single table should work just as well.The processes consuming events from Kafka and Kinesis are not the right place for running any filtering or routing logic, as we need them to be as fast as possible. Instead, for each event type there is one process on each node, enabling the consumer processes to quickly hand-off events by looking at only the event type field. Those &quot;filter&quot; processes own their event-type specific ETS table. For any given event, they can use their ETS table to obtain the list of processes to send the events to. + Node A | Node B | | | + | + | | | | events | | events | | | | | | +---------v----------+ | +---------v----------+ | | | | | | Kafka Consumer | | | Kafka Consumer | | | | | | +---+-------------+--+ | +---+-------------+--+ | | | | | | | | | | foo.bar events | | foo.baz events | foo.bar events | | foo.baz events | | | | | | | | | | +-----------------v---+ +---v-----------------+ | +-----------------v---+ +---v-----------------+ | | | | | | | | | | Filter | | Filter | | | Filter | | Filter | | eventType=foo.bar | | eventType=foo.baz | | | eventType=foo.bar | | eventType=foo.baz | | | | | | | | | | +---------------------+ +----+-------------+--+ | +---------------------+ +---+-------------+---+ | | | | | | | | | | | | | | | foo.bar events that| &lt;----------------------------------------------------------+ satisfy the connections' | | subscription constraints &lt;--------------------------------------------+ | | | | | | A connection subscribes to all filters (periodically), +----------v---+ +---v----------+ | using the filters' process group. For incoming events, | | | | | the filter processes check against all subscription | WebSocket | | SSE | | constraints and forward the events that match to the | connection | | connection | | respective connection processes (using the pids stored | | | | | in the filter's ETS table). +--------------+ +--------------+ +Processes, process groups and lifecycles:Consumer processes (Kafka and Kinesis)permanentFilter processesThe consumer processes have to start filter processes on demand, on their respective node.Filter process stop themselves after not receiving messages for some time.Filter processes join process groups, such that for each event type there is one such group.Connection processesare tied to the connection itselfSubscription entries in the filters' ETS table..are created and refreshed periodically by the connection process, which sends the request to all filter processes in the event-type group. The HTTP call that creates the subscription does not directly call a filter process, but instead informs the connection process itself of the new subscription, which in turn registers with the respective filter processes.have a per record time-to-live, used to keep the data current. If a connection process dies, the subscription records will no longer be refreshed and get removed eventually.","ref":"Rig.EventFilter.html","title":"Rig.EventFilter","type":"behaviour"},{"doc":"","ref":"Rig.EventFilter.html#forward_event/1","title":"Rig.EventFilter.forward_event/1","type":"function"},{"doc":"","ref":"Rig.EventFilter.html#c:forward_event/1","title":"Rig.EventFilter.forward_event/1","type":"callback"},{"doc":"","ref":"Rig.EventFilter.html#refresh_subscriptions/3","title":"Rig.EventFilter.refresh_subscriptions/3","type":"function"},{"doc":"Refresh an existing subscription.Typically called periodically by socket processes for each of their subscriptions. Registers the subscription with all Filter Supervisors on all nodes, using a PG2 process group to find them.","ref":"Rig.EventFilter.html#c:refresh_subscriptions/3","title":"Rig.EventFilter.refresh_subscriptions/3","type":"callback"},{"doc":"Reloads the configuration on all nodes.","ref":"Rig.EventFilter.html#reload_config_everywhere/0","title":"Rig.EventFilter.reload_config_everywhere/0","type":"function"},{"doc":"","ref":"Rig.EventFilter.html#t:done_callback/0","title":"Rig.EventFilter.done_callback/0","type":"type"},{"doc":"Configuration object for event filters.","ref":"Rig.EventFilter.Config.html","title":"Rig.EventFilter.Config","type":"module"},{"doc":"","ref":"Rig.EventFilter.Config.html#check/1","title":"Rig.EventFilter.Config.check/1","type":"function"},{"doc":"","ref":"Rig.EventFilter.Config.html#check_filter_config/1","title":"Rig.EventFilter.Config.check_filter_config/1","type":"function"},{"doc":"","ref":"Rig.EventFilter.Config.html#for_event_type/2","title":"Rig.EventFilter.Config.for_event_type/2","type":"function"},{"doc":"","ref":"Rig.EventFilter.Config.html#new/1","title":"Rig.EventFilter.Config.new/1","type":"function"},{"doc":"","ref":"Rig.EventFilter.Config.html#t:event_config/0","title":"Rig.EventFilter.Config.event_config/0","type":"type"},{"doc":"","ref":"Rig.EventFilter.Config.html#t:event_type/0","title":"Rig.EventFilter.Config.event_type/0","type":"type"},{"doc":"","ref":"Rig.EventFilter.Config.html#t:event_type_config/0","title":"Rig.EventFilter.Config.event_type_config/0","type":"type"},{"doc":"","ref":"Rig.EventFilter.Config.html#t:field_config/0","title":"Rig.EventFilter.Config.field_config/0","type":"type"},{"doc":"","ref":"Rig.EventFilter.Config.html#t:field_name/0","title":"Rig.EventFilter.Config.field_name/0","type":"type"},{"doc":"","ref":"Rig.EventFilter.Config.html#t:jwt_config/0","title":"Rig.EventFilter.Config.jwt_config/0","type":"type"},{"doc":"","ref":"Rig.EventFilter.Config.html#t:t/0","title":"Rig.EventFilter.Config.t/0","type":"type"},{"doc":"Filter for the event subscription mechanism.For each event type, on each node, there is exactly one EventFilter (Server). The Filter keeps track of subscriptions. Subscriptions have a time-to-live, that is, if they're not renewed for some time, the Filter will remove them eventually.","ref":"Rig.EventFilter.Server.html","title":"Rig.EventFilter.Server","type":"module"},{"doc":"","ref":"Rig.EventFilter.Server.html#add_wildcards_to_table/3","title":"Rig.EventFilter.Server.add_wildcards_to_table/3","type":"function"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Rig.EventFilter.Server.html#child_spec/1","title":"Rig.EventFilter.Server.child_spec/1","type":"function"},{"doc":"","ref":"Rig.EventFilter.Server.html#process/1","title":"Rig.EventFilter.Server.process/1","type":"function"},{"doc":"","ref":"Rig.EventFilter.Server.html#remove_expired_records/1","title":"Rig.EventFilter.Server.remove_expired_records/1","type":"function"},{"doc":"","ref":"Rig.EventFilter.Server.html#start/3","title":"Rig.EventFilter.Server.start/3","type":"function"},{"doc":"","ref":"Rig.EventFilter.Server.html#start_link/3","title":"Rig.EventFilter.Server.start_link/3","type":"function"},{"doc":"","ref":"Rig.EventFilter.Server.html#t:event_type/0","title":"Rig.EventFilter.Server.event_type/0","type":"type"},{"doc":"Starts filter processes on the local node on demand.Each node should run exactly one EventFilter Supervisor.","ref":"Rig.EventFilter.Sup.html","title":"Rig.EventFilter.Sup","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Rig.EventFilter.Sup.html#child_spec/1","title":"Rig.EventFilter.Sup.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"Rig.EventFilter.Sup.html#config/0","title":"Rig.EventFilter.Sup.config/0","type":"function"},{"doc":"","ref":"Rig.EventFilter.Sup.html#processes/0","title":"Rig.EventFilter.Sup.processes/0","type":"function"},{"doc":"","ref":"Rig.EventFilter.Sup.html#start_link/1","title":"Rig.EventFilter.Sup.start_link/1","type":"function"},{"doc":"Consumes events and forwards them to the event filter by event type.","ref":"Rig.EventStream.KafkaToFilter.html","title":"Rig.EventStream.KafkaToFilter","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Rig.EventStream.KafkaToFilter.html#child_spec/1","title":"Rig.EventStream.KafkaToFilter.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"Rig.EventStream.KafkaToFilter.html#config/0","title":"Rig.EventStream.KafkaToFilter.config/0","type":"function"},{"doc":"","ref":"Rig.EventStream.KafkaToFilter.html#kafka_handler/2","title":"Rig.EventStream.KafkaToFilter.kafka_handler/2","type":"function"},{"doc":"","ref":"Rig.EventStream.KafkaToFilter.html#start_link/1","title":"Rig.EventStream.KafkaToFilter.start_link/1","type":"function"},{"doc":"","ref":"Rig.EventStream.KafkaToFilter.html#validate/1","title":"Rig.EventStream.KafkaToFilter.validate/1","type":"function"},{"doc":"Consumes events and forwards them to the event filter by event type.","ref":"Rig.EventStream.KinesisToFilter.html","title":"Rig.EventStream.KinesisToFilter","type":"module"},{"doc":"","ref":"Rig.EventStream.KinesisToFilter.html#kinesis_handler/1","title":"Rig.EventStream.KinesisToFilter.kinesis_handler/1","type":"function"},{"doc":"","ref":"Rig.EventStream.KinesisToFilter.html#validate/1","title":"Rig.EventStream.KinesisToFilter.validate/1","type":"function"},{"doc":"Subscribes to a NATS topic and forwards messages to the event filter by event type.","ref":"Rig.EventStream.NatsToFilter.html","title":"Rig.EventStream.NatsToFilter","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"Rig.EventStream.NatsToFilter.html#child_spec/1","title":"Rig.EventStream.NatsToFilter.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"Rig.EventStream.NatsToFilter.html#config/0","title":"Rig.EventStream.NatsToFilter.config/0","type":"function"},{"doc":"","ref":"Rig.EventStream.NatsToFilter.html#handle_message/1","title":"Rig.EventStream.NatsToFilter.handle_message/1","type":"function"},{"doc":"","ref":"Rig.EventStream.NatsToFilter.html#start_link/1","title":"Rig.EventStream.NatsToFilter.start_link/1","type":"function"},{"doc":"Boiler plate for initializing Kafka client configuration.","ref":"Rig.KafkaConfig.html","title":"Rig.KafkaConfig","type":"module"},{"doc":"Create a Kafka configuration map from given parameters.Note that brokers is the only required parameter.Exampleiex&gt; __MODULE__.parse(%{brokers: [&quot;localhost:9092&quot;]}) %RigKafka.Config{ brokers: [{&quot;localhost&quot;, 9092}], client_id: :&quot;brod_client_cc25589c-4180-4f5d-93bf-b4fa778892b4&quot;, consumer_topics: [], group_id: nil, sasl: nil, schema_registry_host: nil, serializer: nil, server_id: :&quot;rig_kafka_cc25589c-4180-4f5d-93bf-b4fa778892b4&quot;, ssl: nil }","ref":"Rig.KafkaConfig.html#parse/1","title":"Rig.KafkaConfig.parse/1","type":"function"},{"doc":"Boiler plate for initializing a Kafka client from RIG's configuration values.CallbacksInspect the start-up configuration, make changes, or abort starting the consumer:@spec validate(config :: map) :: {:ok, map} | :abortReact to incoming messages:@spec kafka_handler(message :: String.t(), headers:: [{String.t(), String.t()}]) :: :ok | error :: any","ref":"Rig.KafkaConsumerSetup.html","title":"Rig.KafkaConsumerSetup","type":"module"},{"doc":"Plug to deal with multiple tokens in the authorization header.","ref":"Rig.Plug.AuthHeader.html","title":"Rig.Plug.AuthHeader","type":"module"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use RigApi, :controller use RigApi, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"RigApi.html","title":"RigApi","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"RigApi.html#__using__/1","title":"RigApi.__using__/1","type":"macro"},{"doc":"","ref":"RigApi.html#controller/0","title":"RigApi.controller/0","type":"function"},{"doc":"","ref":"RigApi.html#router/0","title":"RigApi.router/0","type":"function"},{"doc":"","ref":"RigApi.html#view/0","title":"RigApi.view/0","type":"function"},{"doc":"","ref":"RigApi.Endpoint.html","title":"RigApi.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"RigApi.Endpoint.html#broadcast/3","title":"RigApi.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"RigApi.Endpoint.html#broadcast!/3","title":"RigApi.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"RigApi.Endpoint.html#broadcast_from/4","title":"RigApi.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"RigApi.Endpoint.html#broadcast_from!/4","title":"RigApi.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"RigApi.Endpoint.html#call/2","title":"RigApi.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"RigApi.Endpoint.html#child_spec/1","title":"RigApi.Endpoint.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigApi.Endpoint.html#config/0","title":"RigApi.Endpoint.config/0","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"RigApi.Endpoint.html#config/2","title":"RigApi.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"RigApi.Endpoint.html#config_change/2","title":"RigApi.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"RigApi.Endpoint.html#host/0","title":"RigApi.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"RigApi.Endpoint.html#init/1","title":"RigApi.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"RigApi.Endpoint.html#local_broadcast/3","title":"RigApi.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"RigApi.Endpoint.html#local_broadcast_from/4","title":"RigApi.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"RigApi.Endpoint.html#path/1","title":"RigApi.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"RigApi.Endpoint.html#script_name/0","title":"RigApi.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"RigApi.Endpoint.html#start_link/1","title":"RigApi.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"RigApi.Endpoint.html#static_integrity/1","title":"RigApi.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"RigApi.Endpoint.html#static_lookup/1","title":"RigApi.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"RigApi.Endpoint.html#static_path/1","title":"RigApi.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"RigApi.Endpoint.html#static_url/0","title":"RigApi.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"RigApi.Endpoint.html#struct_url/0","title":"RigApi.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"RigApi.Endpoint.html#subscribe/2","title":"RigApi.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"RigApi.Endpoint.html#unsubscribe/1","title":"RigApi.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"RigApi.Endpoint.html#url/0","title":"RigApi.Endpoint.url/0","type":"function"},{"doc":"","ref":"RigApi.ErrorView.html","title":"RigApi.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"RigApi.ErrorView.html#__resource__/0","title":"RigApi.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"RigApi.ErrorView.html#render/2","title":"RigApi.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"RigApi.ErrorView.html#template_not_found/2","title":"RigApi.ErrorView.template_not_found/2","type":"function"},{"doc":"Translates controller action results into valid Plug.Conn responses.See Phoenix.Controller.action_fallback/1 for more details.","ref":"RigApi.Fallback.html","title":"RigApi.Fallback","type":"module"},{"doc":"Controller for the health endpoint.","ref":"RigApi.Health.html","title":"RigApi.Health","type":"module"},{"doc":"Default response for health status","ref":"RigApi.Health.html#check_health/2","title":"RigApi.Health.check_health/2","type":"function"},{"doc":"","ref":"RigApi.Health.html#swagger_path_check_health/1","title":"RigApi.Health.swagger_path_check_health/1","type":"function"},{"doc":"","ref":"RigApi.Router.html","title":"RigApi.Router","type":"module"},{"doc":"","ref":"RigApi.Router.html#body_parser/2","title":"RigApi.Router.body_parser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"RigApi.Router.html#call/2","title":"RigApi.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"RigApi.Router.html#init/1","title":"RigApi.Router.init/1","type":"function"},{"doc":"","ref":"RigApi.Router.html#swagger_info/0","title":"RigApi.Router.swagger_info/0","type":"function"},{"doc":"Module with named helpers generated from RigApi.Router.","ref":"RigApi.Router.Helpers.html","title":"RigApi.Router.Helpers","type":"module"},{"doc":"","ref":"RigApi.Router.Helpers.html#ap_is_path/2","title":"RigApi.Router.Helpers.ap_is_path/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#ap_is_path/3","title":"RigApi.Router.Helpers.ap_is_path/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#ap_is_path/4","title":"RigApi.Router.Helpers.ap_is_path/4","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#ap_is_url/2","title":"RigApi.Router.Helpers.ap_is_url/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#ap_is_url/3","title":"RigApi.Router.Helpers.ap_is_url/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#ap_is_url/4","title":"RigApi.Router.Helpers.ap_is_url/4","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#health_path/2","title":"RigApi.Router.Helpers.health_path/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#health_path/3","title":"RigApi.Router.Helpers.health_path/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#health_url/2","title":"RigApi.Router.Helpers.health_url/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#health_url/3","title":"RigApi.Router.Helpers.health_url/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_path/2","title":"RigApi.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_path/3","title":"RigApi.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_path/4","title":"RigApi.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_path/5","title":"RigApi.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_url/2","title":"RigApi.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_url/3","title":"RigApi.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_url/4","title":"RigApi.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#live_dashboard_url/5","title":"RigApi.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#messages_path/2","title":"RigApi.Router.Helpers.messages_path/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#messages_path/3","title":"RigApi.Router.Helpers.messages_path/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#messages_url/2","title":"RigApi.Router.Helpers.messages_url/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#messages_url/3","title":"RigApi.Router.Helpers.messages_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"RigApi.Router.Helpers.html#path/2","title":"RigApi.Router.Helpers.path/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#responses_path/2","title":"RigApi.Router.Helpers.responses_path/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#responses_path/3","title":"RigApi.Router.Helpers.responses_path/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#responses_url/2","title":"RigApi.Router.Helpers.responses_url/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#responses_url/3","title":"RigApi.Router.Helpers.responses_url/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#session_blacklist_path/2","title":"RigApi.Router.Helpers.session_blacklist_path/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#session_blacklist_path/3","title":"RigApi.Router.Helpers.session_blacklist_path/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#session_blacklist_path/4","title":"RigApi.Router.Helpers.session_blacklist_path/4","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#session_blacklist_url/2","title":"RigApi.Router.Helpers.session_blacklist_url/2","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#session_blacklist_url/3","title":"RigApi.Router.Helpers.session_blacklist_url/3","type":"function"},{"doc":"","ref":"RigApi.Router.Helpers.html#session_blacklist_url/4","title":"RigApi.Router.Helpers.session_blacklist_url/4","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"RigApi.Router.Helpers.html#static_integrity/2","title":"RigApi.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"RigApi.Router.Helpers.html#static_path/2","title":"RigApi.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"RigApi.Router.Helpers.html#static_url/2","title":"RigApi.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"RigApi.Router.Helpers.html#url/1","title":"RigApi.Router.Helpers.url/1","type":"function"},{"doc":"CRUD controller for the reverse-proxy settings.","ref":"RigApi.V2.APIs.html","title":"RigApi.V2.APIs","type":"module"},{"doc":"","ref":"RigApi.V2.APIs.html#add_api/2","title":"RigApi.V2.APIs.add_api/2","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigApi.V2.APIs.html#config/0","title":"RigApi.V2.APIs.config/0","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#deactivate_api/2","title":"RigApi.V2.APIs.deactivate_api/2","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#get_api_detail/2","title":"RigApi.V2.APIs.get_api_detail/2","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#list_apis/2","title":"RigApi.V2.APIs.list_apis/2","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#swagger_definitions/0","title":"RigApi.V2.APIs.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#swagger_path_add_api/1","title":"RigApi.V2.APIs.swagger_path_add_api/1","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#swagger_path_deactivate_api/1","title":"RigApi.V2.APIs.swagger_path_deactivate_api/1","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#swagger_path_get_api_detail/1","title":"RigApi.V2.APIs.swagger_path_get_api_detail/1","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#swagger_path_list_apis/1","title":"RigApi.V2.APIs.swagger_path_list_apis/1","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#swagger_path_update_api/1","title":"RigApi.V2.APIs.swagger_path_update_api/1","type":"function"},{"doc":"","ref":"RigApi.V2.APIs.html#update_api/2","title":"RigApi.V2.APIs.update_api/2","type":"function"},{"doc":"Controller for submitting (backend) events to potential (frontend) subscribers.","ref":"RigApi.V2.Messages.html","title":"RigApi.V2.Messages","type":"module"},{"doc":"Accepts message to be sent to front-ends.","ref":"RigApi.V2.Messages.html#publish/2","title":"RigApi.V2.Messages.publish/2","type":"function"},{"doc":"","ref":"RigApi.V2.Messages.html#swagger_definitions/0","title":"RigApi.V2.Messages.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V2.Messages.html#swagger_path_publish/1","title":"RigApi.V2.Messages.swagger_path_publish/1","type":"function"},{"doc":"Controller for submitting (backend) responses to asynchronous (frontend) requests.","ref":"RigApi.V2.Responses.html","title":"RigApi.V2.Responses","type":"module"},{"doc":"Accepts message to be sent to correlated HTTP process. Note that body has to contain following field &quot;rig&quot;: { &quot;correlation&quot;: &quot;_id_&quot; }.","ref":"RigApi.V2.Responses.html#create/2","title":"RigApi.V2.Responses.create/2","type":"function"},{"doc":"","ref":"RigApi.V2.Responses.html#swagger_definitions/0","title":"RigApi.V2.Responses.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V2.Responses.html#swagger_path_create/1","title":"RigApi.V2.Responses.swagger_path_create/1","type":"function"},{"doc":"Controller that allows blocking &quot;sessions&quot; for a specific period of time.What a session is depends on your business context and the JWT_SESSION_FIELD setting. For example, a session ID could be a random ID assigned to a token upon login, or the id of the user the token belongs to.","ref":"RigApi.V2.SessionBlacklist.html","title":"RigApi.V2.SessionBlacklist","type":"module"},{"doc":"Plug action to add a session id to the session blacklist.","ref":"RigApi.V2.SessionBlacklist.html#blacklist_session/2","title":"RigApi.V2.SessionBlacklist.blacklist_session/2","type":"function"},{"doc":"Check blacklist status for a specific session id.","ref":"RigApi.V2.SessionBlacklist.html#check_status/2","title":"RigApi.V2.SessionBlacklist.check_status/2","type":"function"},{"doc":"","ref":"RigApi.V2.SessionBlacklist.html#swagger_definitions/0","title":"RigApi.V2.SessionBlacklist.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V2.SessionBlacklist.html#swagger_path_blacklist_session/1","title":"RigApi.V2.SessionBlacklist.swagger_path_blacklist_session/1","type":"function"},{"doc":"","ref":"RigApi.V2.SessionBlacklist.html#swagger_path_check_status/1","title":"RigApi.V2.SessionBlacklist.swagger_path_check_status/1","type":"function"},{"doc":"CRUD controller for the reverse-proxy settings.","ref":"RigApi.V3.APIs.html","title":"RigApi.V3.APIs","type":"module"},{"doc":"","ref":"RigApi.V3.APIs.html#add_api/2","title":"RigApi.V3.APIs.add_api/2","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigApi.V3.APIs.html#config/0","title":"RigApi.V3.APIs.config/0","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#deactivate_api/2","title":"RigApi.V3.APIs.deactivate_api/2","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#get_api_detail/2","title":"RigApi.V3.APIs.get_api_detail/2","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#list_apis/2","title":"RigApi.V3.APIs.list_apis/2","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#swagger_definitions/0","title":"RigApi.V3.APIs.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#swagger_path_add_api/1","title":"RigApi.V3.APIs.swagger_path_add_api/1","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#swagger_path_deactivate_api/1","title":"RigApi.V3.APIs.swagger_path_deactivate_api/1","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#swagger_path_get_api_detail/1","title":"RigApi.V3.APIs.swagger_path_get_api_detail/1","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#swagger_path_list_apis/1","title":"RigApi.V3.APIs.swagger_path_list_apis/1","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#swagger_path_update_api/1","title":"RigApi.V3.APIs.swagger_path_update_api/1","type":"function"},{"doc":"","ref":"RigApi.V3.APIs.html#update_api/2","title":"RigApi.V3.APIs.update_api/2","type":"function"},{"doc":"Controller for submitting (backend) events to potential (frontend) subscribers.","ref":"RigApi.V3.Messages.html","title":"RigApi.V3.Messages","type":"module"},{"doc":"Accepts message to be sent to front-ends.","ref":"RigApi.V3.Messages.html#publish/2","title":"RigApi.V3.Messages.publish/2","type":"function"},{"doc":"","ref":"RigApi.V3.Messages.html#swagger_definitions/0","title":"RigApi.V3.Messages.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V3.Messages.html#swagger_path_publish/1","title":"RigApi.V3.Messages.swagger_path_publish/1","type":"function"},{"doc":"Controller for submitting (backend) responses to asynchronous (frontend) requests.","ref":"RigApi.V3.Responses.html","title":"RigApi.V3.Responses","type":"module"},{"doc":"Accepts message to be sent to correlated HTTP process.Note that body has to contain following field &quot;rig&quot;: { &quot;correlation&quot;: &quot;_id_&quot; }.","ref":"RigApi.V3.Responses.html#create/2","title":"RigApi.V3.Responses.create/2","type":"function"},{"doc":"","ref":"RigApi.V3.Responses.html#swagger_definitions/0","title":"RigApi.V3.Responses.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V3.Responses.html#swagger_path_create/1","title":"RigApi.V3.Responses.swagger_path_create/1","type":"function"},{"doc":"Controller that allows blocking &quot;sessions&quot; for a specific period of time.What a session is depends on your business context and the JWT_SESSION_FIELD setting. For example, a session ID could be a random ID assigned to a token upon login, or the id of the user the token belongs to.","ref":"RigApi.V3.SessionBlacklist.html","title":"RigApi.V3.SessionBlacklist","type":"module"},{"doc":"Plug action to add a session id to the session blacklist.","ref":"RigApi.V3.SessionBlacklist.html#blacklist_session/2","title":"RigApi.V3.SessionBlacklist.blacklist_session/2","type":"function"},{"doc":"Check blacklist status for a specific session id.","ref":"RigApi.V3.SessionBlacklist.html#check_status/2","title":"RigApi.V3.SessionBlacklist.check_status/2","type":"function"},{"doc":"","ref":"RigApi.V3.SessionBlacklist.html#swagger_definitions/0","title":"RigApi.V3.SessionBlacklist.swagger_definitions/0","type":"function"},{"doc":"","ref":"RigApi.V3.SessionBlacklist.html#swagger_path_blacklist_session/1","title":"RigApi.V3.SessionBlacklist.swagger_path_blacklist_session/1","type":"function"},{"doc":"","ref":"RigApi.V3.SessionBlacklist.html#swagger_path_check_status/1","title":"RigApi.V3.SessionBlacklist.swagger_path_check_status/1","type":"function"},{"doc":"CloudEvents is a vendor-neutral specification for defining the format of event data.See: https://github.com/cloudevents","ref":"RigCloudEvents.CloudEvent.html","title":"RigCloudEvents.CloudEvent","type":"module"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#find_value/2","title":"RigCloudEvents.CloudEvent.find_value/2","type":"function"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#id/1","title":"RigCloudEvents.CloudEvent.id/1","type":"function"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#id!/1","title":"RigCloudEvents.CloudEvent.id!/1","type":"function"},{"doc":"Initialize a new CloudEvent given a JSON string.The given JSON string is decoded to an object and fields that are relevant for RIG are checked for validity. However, note that this function does not implement the full specification - a successful pass does not necessarily mean the given JSON contains a valid CloudEvent according to the CloudEvents spec.","ref":"RigCloudEvents.CloudEvent.html#parse/1","title":"RigCloudEvents.CloudEvent.parse/1","type":"function"},{"doc":"Initialize a new CloudEvent or raise.See parse/1.","ref":"RigCloudEvents.CloudEvent.html#parse!/1","title":"RigCloudEvents.CloudEvent.parse!/1","type":"function"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#specversion/1","title":"RigCloudEvents.CloudEvent.specversion/1","type":"function"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#specversion!/1","title":"RigCloudEvents.CloudEvent.specversion!/1","type":"function"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#type/1","title":"RigCloudEvents.CloudEvent.type/1","type":"function"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#type!/1","title":"RigCloudEvents.CloudEvent.type!/1","type":"function"},{"doc":"","ref":"RigCloudEvents.CloudEvent.html#t:t/0","title":"RigCloudEvents.CloudEvent.t/0","type":"type"},{"doc":"Tolerant reader for JSON encoded CloudEvents.","ref":"RigCloudEvents.Parser.html","title":"RigCloudEvents.Parser","type":"behaviour"},{"doc":"Fetch the value of a CloudEvents context attribute.","ref":"RigCloudEvents.Parser.html#c:context_attribute/2","title":"RigCloudEvents.Parser.context_attribute/2","type":"callback"},{"doc":"Fetch the value of a CloudEvents extension attribute.","ref":"RigCloudEvents.Parser.html#c:extension_attribute/3","title":"RigCloudEvents.Parser.extension_attribute/3","type":"callback"},{"doc":"Find a specific value using a JSON Pointer.","ref":"RigCloudEvents.Parser.html#c:find_value/2","title":"RigCloudEvents.Parser.find_value/2","type":"callback"},{"doc":"Parse a JSON encoded CloudEvent.","ref":"RigCloudEvents.Parser.html#c:parse/1","title":"RigCloudEvents.Parser.parse/1","type":"callback"},{"doc":"A CloudEvents context attribute name.","ref":"RigCloudEvents.Parser.html#t:attribute/0","title":"RigCloudEvents.Parser.attribute/0","type":"type"},{"doc":"A CloudEvents extension name.","ref":"RigCloudEvents.Parser.html#t:extension/0","title":"RigCloudEvents.Parser.extension/0","type":"type"},{"doc":"A JSON Pointer (see RFC 6901).","ref":"RigCloudEvents.Parser.html#t:json_pointer/0","title":"RigCloudEvents.Parser.json_pointer/0","type":"type"},{"doc":"The JSON encoded CloudEvent.","ref":"RigCloudEvents.Parser.html#t:json_string/0","title":"RigCloudEvents.Parser.json_string/0","type":"type"},{"doc":"","ref":"RigCloudEvents.Parser.html#t:t/0","title":"RigCloudEvents.Parser.t/0","type":"type"},{"doc":"Fast reader for JSON encoded CloudEvents.Interprets the passed data structure in full once. Field access is done on the resulting data structure.","ref":"RigCloudEvents.Parser.FullParser.html","title":"RigCloudEvents.Parser.FullParser","type":"module"},{"doc":"","ref":"RigCloudEvents.Parser.FullParser.html#t:t/0","title":"RigCloudEvents.Parser.FullParser.t/0","type":"type"},{"doc":"Error-tolerant reader for JSON encoded CloudEvents.Interprets the passed data structure as little as possible. The idea comes from the CloudEvents spec that states that JSON payloads (&quot;data&quot;) are encoded along with the envelope (&quot;context attributes&quot;). This parser only interprets fields that are required for RIG to operate and skips the (potentially large) data payload.","ref":"RigCloudEvents.Parser.PartialParser.html","title":"RigCloudEvents.Parser.PartialParser","type":"module"},{"doc":"","ref":"RigCloudEvents.Parser.PartialParser.html#apply_lens/2","title":"RigCloudEvents.Parser.PartialParser.apply_lens/2","type":"function"},{"doc":"","ref":"RigCloudEvents.Parser.PartialParser.html#t:t/0","title":"RigCloudEvents.Parser.PartialParser.t/0","type":"type"},{"doc":"Common code for dealing with CloudEvents in controllers.The CloudEvents specification defines how CloudEvents must be accepted depending on the transport; see HTTP Transport Binding for CloudEvents.We deviate a bit from the spec by interpreting requests as using structured mode if they come with content type application/json and without a ce-specversion header. See RigCloudEvents.PlugUtils.cloudevents_mode/1 for details.","ref":"RigCloudEvents.PlugUtils.html","title":"RigCloudEvents.PlugUtils","type":"module"},{"doc":"","ref":"RigCloudEvents.PlugUtils.html#do_handle_cloudevent/3","title":"RigCloudEvents.PlugUtils.do_handle_cloudevent/3","type":"function"},{"doc":"","ref":"RigCloudEvents.PlugUtils.html#handle_cloudevent/2","title":"RigCloudEvents.PlugUtils.handle_cloudevent/2","type":"function"},{"doc":"Service definitions for the proxy.","ref":"RigInboundGateway.ApiProxy.Api.html","title":"RigInboundGateway.ApiProxy.Api","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Api.html#filter/2","title":"RigInboundGateway.ApiProxy.Api.filter/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Api.html#t:api_list/0","title":"RigInboundGateway.ApiProxy.Api.api_list/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Api.html#t:endpoint/0","title":"RigInboundGateway.ApiProxy.Api.endpoint/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Api.html#t:endpoint_match/0","title":"RigInboundGateway.ApiProxy.Api.endpoint_match/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Api.html#t:t/0","title":"RigInboundGateway.ApiProxy.Api.t/0","type":"type"},{"doc":"Authentication check for proxied requests.","ref":"RigInboundGateway.ApiProxy.Auth.html","title":"RigInboundGateway.ApiProxy.Auth","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Auth.html#check/3","title":"RigInboundGateway.ApiProxy.Auth.check/3","type":"function"},{"doc":"JWT based authentication check for proxied requests.","ref":"RigInboundGateway.ApiProxy.Auth.Jwt.html","title":"RigInboundGateway.ApiProxy.Auth.Jwt","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Auth.Jwt.html#check/2","title":"RigInboundGateway.ApiProxy.Auth.Jwt.check/2","type":"function"},{"doc":"HTTP wrapper for HTTPoison library. Possible to extend functions for outgoing/ingoing headers, body, etc. at this place. https://github.com/edgurgel/httpoison, Wrapping HTTPoison.Base section","ref":"RigInboundGateway.ApiProxy.Base.html","title":"RigInboundGateway.ApiProxy.Base","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.ApiProxy.Base.html#config/0","title":"RigInboundGateway.ApiProxy.Base.config/0","type":"function"},{"doc":"Issues a DELETE request to the given url.Returns {:ok, response} if the request is successful, {:error, reason} otherwise.See request/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#delete/3","title":"RigInboundGateway.ApiProxy.Base.delete/3","type":"function"},{"doc":"Issues a DELETE request to the given url, raising an exception in case of failure.If the request does not fail, the response is returned.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#delete!/3","title":"RigInboundGateway.ApiProxy.Base.delete!/3","type":"function"},{"doc":"Issues a GET request to the given url.Returns {:ok, response} if the request is successful, {:error, reason} otherwise.See request/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#get/3","title":"RigInboundGateway.ApiProxy.Base.get/3","type":"function"},{"doc":"Issues a GET request to the given url, raising an exception in case of failure.If the request does not fail, the response is returned.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#get!/3","title":"RigInboundGateway.ApiProxy.Base.get!/3","type":"function"},{"doc":"Issues a HEAD request to the given url.Returns {:ok, response} if the request is successful, {:error, reason} otherwise.See request/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#head/3","title":"RigInboundGateway.ApiProxy.Base.head/3","type":"function"},{"doc":"Issues a HEAD request to the given url, raising an exception in case of failure.If the request does not fail, the response is returned.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#head!/3","title":"RigInboundGateway.ApiProxy.Base.head!/3","type":"function"},{"doc":"Issues an OPTIONS request to the given url.Returns {:ok, response} if the request is successful, {:error, reason} otherwise.See request/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#options/3","title":"RigInboundGateway.ApiProxy.Base.options/3","type":"function"},{"doc":"Issues a OPTIONS request to the given url, raising an exception in case of failure.If the request does not fail, the response is returned.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#options!/3","title":"RigInboundGateway.ApiProxy.Base.options!/3","type":"function"},{"doc":"Issues a PATCH request to the given url.Returns {:ok, response} if the request is successful, {:error, reason} otherwise.See request/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#patch/4","title":"RigInboundGateway.ApiProxy.Base.patch/4","type":"function"},{"doc":"Issues a PATCH request to the given url, raising an exception in case of failure.If the request does not fail, the response is returned.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#patch!/4","title":"RigInboundGateway.ApiProxy.Base.patch!/4","type":"function"},{"doc":"Issues a POST request to the given url.Returns {:ok, response} if the request is successful, {:error, reason} otherwise.See request/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#post/4","title":"RigInboundGateway.ApiProxy.Base.post/4","type":"function"},{"doc":"Issues a POST request to the given url, raising an exception in case of failure.If the request does not fail, the response is returned.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#post!/4","title":"RigInboundGateway.ApiProxy.Base.post!/4","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_headers/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_headers/1","title":"RigInboundGateway.ApiProxy.Base.process_headers/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_body/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_request_body/1","title":"RigInboundGateway.ApiProxy.Base.process_request_body/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_headers/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_request_headers/1","title":"RigInboundGateway.ApiProxy.Base.process_request_headers/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_options/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_request_options/1","title":"RigInboundGateway.ApiProxy.Base.process_request_options/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_params/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_request_params/1","title":"RigInboundGateway.ApiProxy.Base.process_request_params/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_request_url/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_request_url/1","title":"RigInboundGateway.ApiProxy.Base.process_request_url/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_response/1","title":"RigInboundGateway.ApiProxy.Base.process_response/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_body/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_response_body/1","title":"RigInboundGateway.ApiProxy.Base.process_response_body/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_chunk/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_response_chunk/1","title":"RigInboundGateway.ApiProxy.Base.process_response_chunk/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_headers/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_response_headers/1","title":"RigInboundGateway.ApiProxy.Base.process_response_headers/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_response_status_code/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_response_status_code/1","title":"RigInboundGateway.ApiProxy.Base.process_response_status_code/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_status_code/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_status_code/1","title":"RigInboundGateway.ApiProxy.Base.process_status_code/1","type":"function"},{"doc":"Callback implementation for HTTPoison.Base.process_url/1.","ref":"RigInboundGateway.ApiProxy.Base.html#process_url/1","title":"RigInboundGateway.ApiProxy.Base.process_url/1","type":"function"},{"doc":"Issues a PUT request to the given url.Returns {:ok, response} if the request is successful, {:error, reason} otherwise.See request/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#put/4","title":"RigInboundGateway.ApiProxy.Base.put/4","type":"function"},{"doc":"Issues a PUT request to the given url, raising an exception in case of failure.If the request does not fail, the response is returned.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#put!/4","title":"RigInboundGateway.ApiProxy.Base.put!/4","type":"function"},{"doc":"Issues an HTTP request using a Request struct.This function returns {:ok, response} or {:ok, async_response} if the request is successful, {:error, reason} otherwise.Examplesrequest = %HTTPoison.Request{ method: :post, url: &quot;https://my.website.com&quot;, body: &quot;{\\&quot;foo\\&quot;: 3}&quot;, headers: [{&quot;Accept&quot;, &quot;application/json&quot;}] } request(request)","ref":"RigInboundGateway.ApiProxy.Base.html#request/1","title":"RigInboundGateway.ApiProxy.Base.request/1","type":"function"},{"doc":"Issues an HTTP request with the given method to the given url.This function is usually used indirectly by get/3, post/4, put/4, etcArgs:method - HTTP method as an atom (:get, :head, :post, :put, :delete, etc.)url - target url as a binary string or char listbody - request body. See more belowheaders - HTTP headers as an orddict (e.g., [{&quot;Accept&quot;, &quot;application/json&quot;}])options - Keyword list of optionsBody: see type HTTPoison.RequestOptions: see type HTTPoison.RequestThis function returns {:ok, response} or {:ok, async_response} if the request is successful, {:error, reason} otherwise.Examplesrequest(:post, &quot;https://my.website.com&quot;, &quot;{\\&quot;foo\\&quot;: 3}&quot;, [{&quot;Accept&quot;, &quot;application/json&quot;}])","ref":"RigInboundGateway.ApiProxy.Base.html#request/5","title":"RigInboundGateway.ApiProxy.Base.request/5","type":"function"},{"doc":"Issues an HTTP request with the given method to the given url, raising an exception in case of failure.request!/5 works exactly like request/5 but it returns just the response in case of a successful request, raising an exception in case the request fails.","ref":"RigInboundGateway.ApiProxy.Base.html#request!/5","title":"RigInboundGateway.ApiProxy.Base.request!/5","type":"function"},{"doc":"Starts HTTPoison and its dependencies.","ref":"RigInboundGateway.ApiProxy.Base.html#start/0","title":"RigInboundGateway.ApiProxy.Base.start/0","type":"function"},{"doc":"Requests the next message to be streamed for a given HTTPoison.AsyncResponse.See request!/5 for more detailed information.","ref":"RigInboundGateway.ApiProxy.Base.html#stream_next/1","title":"RigInboundGateway.ApiProxy.Base.stream_next/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Base.html#t:body/0","title":"RigInboundGateway.ApiProxy.Base.body/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Base.html#t:headers/0","title":"RigInboundGateway.ApiProxy.Base.headers/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Base.html#t:method/0","title":"RigInboundGateway.ApiProxy.Base.method/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Base.html#t:options/0","title":"RigInboundGateway.ApiProxy.Base.options/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Base.html#t:params/0","title":"RigInboundGateway.ApiProxy.Base.params/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Base.html#t:request/0","title":"RigInboundGateway.ApiProxy.Base.request/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Base.html#t:url/0","title":"RigInboundGateway.ApiProxy.Base.url/0","type":"type"},{"doc":"Request handler that proxies the request according to the implementation.","ref":"RigInboundGateway.ApiProxy.Handler.html","title":"RigInboundGateway.ApiProxy.Handler","type":"behaviour"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.html#c:handle_http_request/4","title":"RigInboundGateway.ApiProxy.Handler.handle_http_request/4","type":"callback"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.html#t:request_path/0","title":"RigInboundGateway.ApiProxy.Handler.request_path/0","type":"type"},{"doc":"Handles requests for HTTP targets.","ref":"RigInboundGateway.ApiProxy.Handler.Http.html","title":"RigInboundGateway.ApiProxy.Handler.Http","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Http.html#add_query_params/2","title":"RigInboundGateway.ApiProxy.Handler.Http.add_query_params/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Http.html#build_url/2","title":"RigInboundGateway.ApiProxy.Handler.Http.build_url/2","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.ApiProxy.Handler.Http.html#config/0","title":"RigInboundGateway.ApiProxy.Handler.Http.config/0","type":"function"},{"doc":"HTTP header modification to be applied, according to the spec.","ref":"RigInboundGateway.ApiProxy.Handler.HttpHeader.html","title":"RigInboundGateway.ApiProxy.Handler.HttpHeader","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.HttpHeader.html#put_forward_header/3","title":"RigInboundGateway.ApiProxy.Handler.HttpHeader.put_forward_header/3","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.HttpHeader.html#put_host_header/2","title":"RigInboundGateway.ApiProxy.Handler.HttpHeader.put_host_header/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.HttpHeader.html#t:ip/0","title":"RigInboundGateway.ApiProxy.Handler.HttpHeader.ip/0","type":"type"},{"doc":"Handles requests for Kafka targets.","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html","title":"RigInboundGateway.ApiProxy.Handler.Kafka","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#child_spec/1","title":"RigInboundGateway.ApiProxy.Handler.Kafka.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#config/0","title":"RigInboundGateway.ApiProxy.Handler.Kafka.config/0","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#do_handle_http_request/7","title":"RigInboundGateway.ApiProxy.Handler.Kafka.do_handle_http_request/7","type":"function"},{"doc":"Produce the request to a Kafka topic and optionally wait for the (correlated) response.Expects a JSON encoded CloudEvent in the HTTP body.Optionally set a partition key via this field:rig: {&quot;target_partition&quot;:&quot;the-partition-key&quot;}","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#handle_http_request/4","title":"RigInboundGateway.ApiProxy.Handler.Kafka.handle_http_request/4","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#kafka_handler/2","title":"RigInboundGateway.ApiProxy.Handler.Kafka.kafka_handler/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#respond_with_bad_request/3","title":"RigInboundGateway.ApiProxy.Handler.Kafka.respond_with_bad_request/3","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#start_link/1","title":"RigInboundGateway.ApiProxy.Handler.Kafka.start_link/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Kafka.html#validate/1","title":"RigInboundGateway.ApiProxy.Handler.Kafka.validate/1","type":"function"},{"doc":"Handles requests for Kinesis targets.","ref":"RigInboundGateway.ApiProxy.Handler.Kinesis.html","title":"RigInboundGateway.ApiProxy.Handler.Kinesis","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.ApiProxy.Handler.Kinesis.html#config/0","title":"RigInboundGateway.ApiProxy.Handler.Kinesis.config/0","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Kinesis.html#do_handle_http_request/6","title":"RigInboundGateway.ApiProxy.Handler.Kinesis.do_handle_http_request/6","type":"function"},{"doc":"Produce the request to a Kinesis topic and optionally wait for the (correlated) response.Expects a JSON encoded CloudEvent in the HTTP body.Optionally set a partition key via this field:rig: {&quot;target_partition&quot;:&quot;the-partition-key&quot;}","ref":"RigInboundGateway.ApiProxy.Handler.Kinesis.html#handle_http_request/4","title":"RigInboundGateway.ApiProxy.Handler.Kinesis.handle_http_request/4","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Kinesis.html#respond_with_bad_request/3","title":"RigInboundGateway.ApiProxy.Handler.Kinesis.respond_with_bad_request/3","type":"function"},{"doc":"Handles requests for NATS targets.","ref":"RigInboundGateway.ApiProxy.Handler.Nats.html","title":"RigInboundGateway.ApiProxy.Handler.Nats","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.ApiProxy.Handler.Nats.html#config/0","title":"RigInboundGateway.ApiProxy.Handler.Nats.config/0","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Handler.Nats.html#do_handle_http_request/5","title":"RigInboundGateway.ApiProxy.Handler.Nats.do_handle_http_request/5","type":"function"},{"doc":"Produce the request to a NATS topic and optionally wait for the response.Expects a JSON encoded CloudEvent in the HTTP body.","ref":"RigInboundGateway.ApiProxy.Handler.Nats.html#handle_http_request/4","title":"RigInboundGateway.ApiProxy.Handler.Nats.handle_http_request/4","type":"function"},{"doc":"Module responsible for catching and forwarding all traffic to Proxy Router. Possible to do transformations to requests before they get to Proxy Router for further processing &amp; forwarding.","ref":"RigInboundGateway.ApiProxy.Plug.html","title":"RigInboundGateway.ApiProxy.Plug","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Plug.html#call/2","title":"RigInboundGateway.ApiProxy.Plug.call/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Plug.html#init/1","title":"RigInboundGateway.ApiProxy.Plug.init/1","type":"function"},{"doc":"Handles Phoenix Presence events.Implemented as a Phoenix.Tracker, this module tracks all events it receives from the given Phoenix PubSub server. Only join events that refer to the @proxy topic are considered for inclusion into the PROXY.The PROXY server is started from, and linked against, this server.","ref":"RigInboundGateway.ApiProxy.PresenceHandler.html","title":"RigInboundGateway.ApiProxy.PresenceHandler","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RigInboundGateway.ApiProxy.PresenceHandler.html#child_spec/1","title":"RigInboundGateway.ApiProxy.PresenceHandler.child_spec/1","type":"function"},{"doc":"Forwards joins on the &quot;proxy&quot; topic to the Proxy server.Leaves are not handled since we want to keep track of removed APIs and potentially renew them.","ref":"RigInboundGateway.ApiProxy.PresenceHandler.html#handle_diff/2","title":"RigInboundGateway.ApiProxy.PresenceHandler.handle_diff/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.PresenceHandler.html#start_link/1","title":"RigInboundGateway.ApiProxy.PresenceHandler.start_link/1","type":"function"},{"doc":"Handles parsing of messages coming from different sources (e.g. Kafka)","ref":"RigInboundGateway.ApiProxy.ResponseFromParser.html","title":"RigInboundGateway.ApiProxy.ResponseFromParser","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.ResponseFromParser.html#parse/2","title":"RigInboundGateway.ApiProxy.ResponseFromParser.parse/2","type":"function"},{"doc":"Provides middleware proxy for incoming REST requests at specific endpoints. Initial API definitions are loaded from Phoenix Presence under topic &quot;proxy&quot;. Matches all incoming HTTP requests and checks if such endpoint is defined in any API. If endpoint needs authentication, it is automatically triggered. Valid HTTP requests are forwarded to given service and their response is sent back to client.","ref":"RigInboundGateway.ApiProxy.Router.html","title":"RigInboundGateway.ApiProxy.Router","type":"module"},{"doc":"Callback implementation for Plug.call/2.","ref":"RigInboundGateway.ApiProxy.Router.html#call/2","title":"RigInboundGateway.ApiProxy.Router.call/2","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.ApiProxy.Router.html#config/0","title":"RigInboundGateway.ApiProxy.Router.config/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"RigInboundGateway.ApiProxy.Router.html#init/1","title":"RigInboundGateway.ApiProxy.Router.init/1","type":"function"},{"doc":"Works as (de)serializer/formatter/encoder for API endpoints. Abstracts data transformation logic from router logic.","ref":"RigInboundGateway.ApiProxy.Serializer.html","title":"RigInboundGateway.ApiProxy.Serializer","type":"module"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Serializer.html#encode_error_message/1","title":"RigInboundGateway.ApiProxy.Serializer.encode_error_message/1","type":"function"},{"doc":"Supervisor.","ref":"RigInboundGateway.ApiProxy.Sup.html","title":"RigInboundGateway.ApiProxy.Sup","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RigInboundGateway.ApiProxy.Sup.html#child_spec/1","title":"RigInboundGateway.ApiProxy.Sup.child_spec/1","type":"function"},{"doc":"Callback implementation for Supervisor.init/1.","ref":"RigInboundGateway.ApiProxy.Sup.html#init/1","title":"RigInboundGateway.ApiProxy.Sup.init/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Sup.html#start_link/1","title":"RigInboundGateway.ApiProxy.Sup.start_link/1","type":"function"},{"doc":"Encapsulates Phoenix Presence, mainly to ease testing.","ref":"RigInboundGateway.ApiProxy.Tracker.html","title":"RigInboundGateway.ApiProxy.Tracker","type":"module"},{"doc":"Used to validate APIs configuration for reverse proxy. Validates use cases such as setting &quot;target&quot; to &quot;kafka&quot; but not &quot;topic&quot;, which is required in such case.When any error occurs during RIG start -&gt; process will exit. When any error occurs during REST API request -&gt; process won't exit, but instead API returns 400 -- bad request.","ref":"RigInboundGateway.ApiProxy.Validations.html","title":"RigInboundGateway.ApiProxy.Validations","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.ApiProxy.Validations.html#config/0","title":"RigInboundGateway.ApiProxy.Validations.config/0","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#to_map/1","title":"RigInboundGateway.ApiProxy.Validations.to_map/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#type_validation/4","title":"RigInboundGateway.ApiProxy.Validations.type_validation/4","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate/1","title":"RigInboundGateway.ApiProxy.Validations.validate/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate!/1","title":"RigInboundGateway.ApiProxy.Validations.validate!/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_all/1","title":"RigInboundGateway.ApiProxy.Validations.validate_all/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_auth/2","title":"RigInboundGateway.ApiProxy.Validations.validate_auth/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_auth_type/1","title":"RigInboundGateway.ApiProxy.Validations.validate_auth_type/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_endpoint_target/2","title":"RigInboundGateway.ApiProxy.Validations.validate_endpoint_target/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_endpoints/2","title":"RigInboundGateway.ApiProxy.Validations.validate_endpoints/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_integer/2","title":"RigInboundGateway.ApiProxy.Validations.validate_integer/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_list/2","title":"RigInboundGateway.ApiProxy.Validations.validate_list/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_proxy/1","title":"RigInboundGateway.ApiProxy.Validations.validate_proxy/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_required_props/2","title":"RigInboundGateway.ApiProxy.Validations.validate_required_props/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_secured_endpoint/2","title":"RigInboundGateway.ApiProxy.Validations.validate_secured_endpoint/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_string/2","title":"RigInboundGateway.ApiProxy.Validations.validate_string/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#validate_version_data/1","title":"RigInboundGateway.ApiProxy.Validations.validate_version_data/1","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#with_any_error/2","title":"RigInboundGateway.ApiProxy.Validations.with_any_error/2","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#with_nested_presence/3","title":"RigInboundGateway.ApiProxy.Validations.with_nested_presence/3","type":"function"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#t:error_list_t/0","title":"RigInboundGateway.ApiProxy.Validations.error_list_t/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#t:error_map_t/0","title":"RigInboundGateway.ApiProxy.Validations.error_map_t/0","type":"type"},{"doc":"","ref":"RigInboundGateway.ApiProxy.Validations.html#t:error_t/0","title":"RigInboundGateway.ApiProxy.Validations.error_t/0","type":"type"},{"doc":"Utility functions used in more than one controller.","ref":"RigInboundGateway.Events.html","title":"RigInboundGateway.Events","type":"module"},{"doc":"","ref":"RigInboundGateway.Events.html#subscriptions_set/1","title":"RigInboundGateway.Events.subscriptions_set/1","type":"function"},{"doc":"","ref":"RigInboundGateway.Events.html#welcome_event/1","title":"RigInboundGateway.Events.welcome_event/1","type":"function"},{"doc":"Enables persisting and CRUD operations for Proxy's API definitions in presence.In a distributed setting, the node that does the persisting of API definitions spreads the information via Phoenix' PubSub Server as Phoenix Presence information. The other nodes react by tracking the same record themselves, which means that for one record and n nodes there are n items in the Presence list. The following properties are a result of this:API definitions managing can occur on/by any node.API definitions are eventually consistent over all nodes.Any node can go down and come up at any time without affecting the API definitions, except if all nodes go down at the same time (in that case there is nothing to synchronize from -- changes are not stored on disk).","ref":"RigInboundGateway.Proxy.html","title":"RigInboundGateway.Proxy","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.Proxy.html#config/0","title":"RigInboundGateway.Proxy.config/0","type":"function"},{"doc":"","ref":"RigInboundGateway.Proxy.html#handle_call/3","title":"RigInboundGateway.Proxy.handle_call/3","type":"function"},{"doc":"","ref":"RigInboundGateway.Proxy.html#handle_cast/2","title":"RigInboundGateway.Proxy.handle_cast/2","type":"function"},{"doc":"","ref":"RigInboundGateway.Proxy.html#handle_info/2","title":"RigInboundGateway.Proxy.handle_info/2","type":"function"},{"doc":"","ref":"RigInboundGateway.Proxy.html#handle_join_api/3","title":"RigInboundGateway.Proxy.handle_join_api/3","type":"function"},{"doc":"","ref":"RigInboundGateway.Proxy.html#init/1","title":"RigInboundGateway.Proxy.init/1","type":"function"},{"doc":"","ref":"RigInboundGateway.Proxy.html#init_presence/1","title":"RigInboundGateway.Proxy.init_presence/1","type":"function"},{"doc":"","ref":"RigInboundGateway.Proxy.html#start_link/2","title":"RigInboundGateway.Proxy.start_link/2","type":"function"},{"doc":"Interface for request logging backends.","ref":"RigInboundGateway.RequestLogger.html","title":"RigInboundGateway.RequestLogger","type":"behaviour"},{"doc":"","ref":"RigInboundGateway.RequestLogger.html#c:log_call/3","title":"RigInboundGateway.RequestLogger.log_call/3","type":"callback"},{"doc":"Module responsible for global validation of environment variables and provides utility functions to validate configuration in respective modules.","ref":"RigInboundGateway.RequestLogger.ConfigValidation.html","title":"RigInboundGateway.RequestLogger.ConfigValidation","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.RequestLogger.ConfigValidation.html#config/0","title":"RigInboundGateway.RequestLogger.ConfigValidation.config/0","type":"function"},{"doc":"","ref":"RigInboundGateway.RequestLogger.ConfigValidation.html#validate_dependent_value/4","title":"RigInboundGateway.RequestLogger.ConfigValidation.validate_dependent_value/4","type":"function"},{"doc":"","ref":"RigInboundGateway.RequestLogger.ConfigValidation.html#validate_value_difference/3","title":"RigInboundGateway.RequestLogger.ConfigValidation.validate_value_difference/3","type":"function"},{"doc":"Example request logger implementation.","ref":"RigInboundGateway.RequestLogger.Console.html","title":"RigInboundGateway.RequestLogger.Console","type":"module"},{"doc":"Kafka request logger implementation.","ref":"RigInboundGateway.RequestLogger.Kafka.html","title":"RigInboundGateway.RequestLogger.Kafka","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RigInboundGateway.RequestLogger.Kafka.html#child_spec/1","title":"RigInboundGateway.RequestLogger.Kafka.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGateway.RequestLogger.Kafka.html#config/0","title":"RigInboundGateway.RequestLogger.Kafka.config/0","type":"function"},{"doc":"","ref":"RigInboundGateway.RequestLogger.Kafka.html#kafka_handler/2","title":"RigInboundGateway.RequestLogger.Kafka.kafka_handler/2","type":"function"},{"doc":"","ref":"RigInboundGateway.RequestLogger.Kafka.html#start_link/1","title":"RigInboundGateway.RequestLogger.Kafka.start_link/1","type":"function"},{"doc":"","ref":"RigInboundGateway.RequestLogger.Kafka.html#validate/1","title":"RigInboundGateway.RequestLogger.Kafka.validate/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use RigInboundGatewayWeb, :controller use RigInboundGatewayWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"RigInboundGatewayWeb.html","title":"RigInboundGatewayWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"RigInboundGatewayWeb.html#__using__/1","title":"RigInboundGatewayWeb.__using__/1","type":"macro"},{"doc":"","ref":"RigInboundGatewayWeb.html#controller/0","title":"RigInboundGatewayWeb.controller/0","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.html#router/0","title":"RigInboundGatewayWeb.router/0","type":"function"},{"doc":"Cowboy WebSocket handler.As soon as Phoenix pulls in Cowboy 2 this will have to be rewritten using the :cowboy_websocket behaviour.","ref":"RigInboundGatewayWeb.ConnectionInit.html","title":"RigInboundGatewayWeb.ConnectionInit","type":"module"},{"doc":"","ref":"RigInboundGatewayWeb.ConnectionInit.html#set_up/6","title":"RigInboundGatewayWeb.ConnectionInit.set_up/6","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.ConnectionInit.html#subscriptions_query_param_to_body/1","title":"RigInboundGatewayWeb.ConnectionInit.subscriptions_query_param_to_body/1","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.ConnectionInit.html#t:handler_response/0","title":"RigInboundGatewayWeb.ConnectionInit.handler_response/0","type":"type"},{"doc":"","ref":"RigInboundGatewayWeb.ConnectionInit.html#t:on_error/0","title":"RigInboundGatewayWeb.ConnectionInit.on_error/0","type":"type"},{"doc":"","ref":"RigInboundGatewayWeb.ConnectionInit.html#t:on_success/0","title":"RigInboundGatewayWeb.ConnectionInit.on_success/0","type":"type"},{"doc":"Used to enforce a limit on the maximum connections per minute","ref":"RigInboundGatewayWeb.ConnectionLimit.html","title":"RigInboundGatewayWeb.ConnectionLimit","type":"module"},{"doc":"","ref":"RigInboundGatewayWeb.ConnectionLimit.html#check_rate_limit/0","title":"RigInboundGatewayWeb.ConnectionLimit.check_rate_limit/0","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGatewayWeb.ConnectionLimit.html#config/0","title":"RigInboundGatewayWeb.ConnectionLimit.config/0","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Endpoint.html","title":"RigInboundGatewayWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"RigInboundGatewayWeb.Endpoint.html#broadcast/3","title":"RigInboundGatewayWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"RigInboundGatewayWeb.Endpoint.html#broadcast!/3","title":"RigInboundGatewayWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"RigInboundGatewayWeb.Endpoint.html#broadcast_from/4","title":"RigInboundGatewayWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"RigInboundGatewayWeb.Endpoint.html#broadcast_from!/4","title":"RigInboundGatewayWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"RigInboundGatewayWeb.Endpoint.html#call/2","title":"RigInboundGatewayWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"RigInboundGatewayWeb.Endpoint.html#child_spec/1","title":"RigInboundGatewayWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGatewayWeb.Endpoint.html#config/0","title":"RigInboundGatewayWeb.Endpoint.config/0","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"RigInboundGatewayWeb.Endpoint.html#config/2","title":"RigInboundGatewayWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"RigInboundGatewayWeb.Endpoint.html#config_change/2","title":"RigInboundGatewayWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"RigInboundGatewayWeb.Endpoint.html#host/0","title":"RigInboundGatewayWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"RigInboundGatewayWeb.Endpoint.html#init/1","title":"RigInboundGatewayWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"RigInboundGatewayWeb.Endpoint.html#local_broadcast/3","title":"RigInboundGatewayWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"RigInboundGatewayWeb.Endpoint.html#local_broadcast_from/4","title":"RigInboundGatewayWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"RigInboundGatewayWeb.Endpoint.html#path/1","title":"RigInboundGatewayWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"RigInboundGatewayWeb.Endpoint.html#script_name/0","title":"RigInboundGatewayWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"RigInboundGatewayWeb.Endpoint.html#start_link/1","title":"RigInboundGatewayWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"RigInboundGatewayWeb.Endpoint.html#static_integrity/1","title":"RigInboundGatewayWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"RigInboundGatewayWeb.Endpoint.html#static_lookup/1","title":"RigInboundGatewayWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"RigInboundGatewayWeb.Endpoint.html#static_path/1","title":"RigInboundGatewayWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"RigInboundGatewayWeb.Endpoint.html#static_url/0","title":"RigInboundGatewayWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"RigInboundGatewayWeb.Endpoint.html#struct_url/0","title":"RigInboundGatewayWeb.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Endpoint.html#subscribe/2","title":"RigInboundGatewayWeb.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Endpoint.html#unsubscribe/1","title":"RigInboundGatewayWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"RigInboundGatewayWeb.Endpoint.html#url/0","title":"RigInboundGatewayWeb.Endpoint.url/0","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.ErrorView.html","title":"RigInboundGatewayWeb.ErrorView","type":"module"},{"doc":"","ref":"RigInboundGatewayWeb.ErrorView.html#render/2","title":"RigInboundGatewayWeb.ErrorView.render/2","type":"function"},{"doc":"A circular buffer for events.Buffers events up to a configurable capacity. After that, every new item overwrites the oldest one.","ref":"RigInboundGatewayWeb.EventBuffer.html","title":"RigInboundGatewayWeb.EventBuffer","type":"module"},{"doc":"Add an event to this buffer.If the buffer runs at full capacity, this overwrites the oldest event in the buffer.","ref":"RigInboundGatewayWeb.EventBuffer.html#add_event/2","title":"RigInboundGatewayWeb.EventBuffer.add_event/2","type":"function"},{"doc":"All events, sorted from oldest to newest event.","ref":"RigInboundGatewayWeb.EventBuffer.html#all_events/1","title":"RigInboundGatewayWeb.EventBuffer.all_events/1","type":"function"},{"doc":"The capacity is the maximum number of events this buffer can hold.","ref":"RigInboundGatewayWeb.EventBuffer.html#capacity/1","title":"RigInboundGatewayWeb.EventBuffer.capacity/1","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.EventBuffer.html#events_since/2","title":"RigInboundGatewayWeb.EventBuffer.events_since/2","type":"function"},{"doc":"Creates a new EventBuffer with the given capacity.","ref":"RigInboundGatewayWeb.EventBuffer.html#new/1","title":"RigInboundGatewayWeb.EventBuffer.new/1","type":"function"},{"doc":"A circular event buffer.","ref":"RigInboundGatewayWeb.EventBuffer.html#t:t/0","title":"RigInboundGatewayWeb.EventBuffer.t/0","type":"type"},{"doc":"","ref":"RigInboundGatewayWeb.HealthController.html","title":"RigInboundGatewayWeb.HealthController","type":"module"},{"doc":"Default response for health status","ref":"RigInboundGatewayWeb.HealthController.html#check_health/2","title":"RigInboundGatewayWeb.HealthController.check_health/2","type":"function"},{"doc":"Helper functions around media type handling.","ref":"RigInboundGatewayWeb.MediaTypeHandling.html","title":"RigInboundGatewayWeb.MediaTypeHandling","type":"module"},{"doc":"","ref":"RigInboundGatewayWeb.MediaTypeHandling.html#accept_only_req_for/2","title":"RigInboundGatewayWeb.MediaTypeHandling.accept_only_req_for/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.MediaTypeHandling.html#accepted_media_types/1","title":"RigInboundGatewayWeb.MediaTypeHandling.accepted_media_types/1","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.MediaTypeHandling.html#accepts_media_type?/2","title":"RigInboundGatewayWeb.MediaTypeHandling.accepts_media_type?/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.MediaTypeHandling.html#content_type/1","title":"RigInboundGatewayWeb.MediaTypeHandling.content_type/1","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.MediaTypeHandling.html#extract_from_header/3","title":"RigInboundGatewayWeb.MediaTypeHandling.extract_from_header/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.MediaTypeHandling.html#media_type/1","title":"RigInboundGatewayWeb.MediaTypeHandling.media_type/1","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.MediaTypeHandling.html#t:media_type/0","title":"RigInboundGatewayWeb.MediaTypeHandling.media_type/0","type":"type"},{"doc":"","ref":"RigInboundGatewayWeb.Router.html","title":"RigInboundGatewayWeb.Router","type":"module"},{"doc":"","ref":"RigInboundGatewayWeb.Router.html#api/2","title":"RigInboundGatewayWeb.Router.api/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"RigInboundGatewayWeb.Router.html#call/2","title":"RigInboundGatewayWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"RigInboundGatewayWeb.Router.html#init/1","title":"RigInboundGatewayWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from RigInboundGatewayWeb.Router.","ref":"RigInboundGatewayWeb.Router.Helpers.html","title":"RigInboundGatewayWeb.Router.Helpers","type":"module"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#event_path/2","title":"RigInboundGatewayWeb.Router.Helpers.event_path/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#event_path/3","title":"RigInboundGatewayWeb.Router.Helpers.event_path/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#event_url/2","title":"RigInboundGatewayWeb.Router.Helpers.event_url/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#event_url/3","title":"RigInboundGatewayWeb.Router.Helpers.event_url/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#health_path/2","title":"RigInboundGatewayWeb.Router.Helpers.health_path/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#health_path/3","title":"RigInboundGatewayWeb.Router.Helpers.health_path/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#health_url/2","title":"RigInboundGatewayWeb.Router.Helpers.health_url/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#health_url/3","title":"RigInboundGatewayWeb.Router.Helpers.health_url/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#longpolling_path/2","title":"RigInboundGatewayWeb.Router.Helpers.longpolling_path/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#longpolling_path/3","title":"RigInboundGatewayWeb.Router.Helpers.longpolling_path/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#longpolling_url/2","title":"RigInboundGatewayWeb.Router.Helpers.longpolling_url/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#longpolling_url/3","title":"RigInboundGatewayWeb.Router.Helpers.longpolling_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"RigInboundGatewayWeb.Router.Helpers.html#path/2","title":"RigInboundGatewayWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"RigInboundGatewayWeb.Router.Helpers.html#static_integrity/2","title":"RigInboundGatewayWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"RigInboundGatewayWeb.Router.Helpers.html#static_path/2","title":"RigInboundGatewayWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"RigInboundGatewayWeb.Router.Helpers.html#static_url/2","title":"RigInboundGatewayWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#subscription_path/3","title":"RigInboundGatewayWeb.Router.Helpers.subscription_path/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#subscription_path/4","title":"RigInboundGatewayWeb.Router.Helpers.subscription_path/4","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#subscription_url/3","title":"RigInboundGatewayWeb.Router.Helpers.subscription_url/3","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Router.Helpers.html#subscription_url/4","title":"RigInboundGatewayWeb.Router.Helpers.subscription_url/4","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"RigInboundGatewayWeb.Router.Helpers.html#url/1","title":"RigInboundGatewayWeb.Router.Helpers.url/1","type":"function"},{"doc":"Maintains subscriptions and buffers incoming events.Started by, or connected from, a (longpolling) connection process.","ref":"RigInboundGatewayWeb.Session.html","title":"RigInboundGatewayWeb.Session","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RigInboundGatewayWeb.Session.html#child_spec/1","title":"RigInboundGatewayWeb.Session.child_spec/1","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Session.html#recv_events/2","title":"RigInboundGatewayWeb.Session.recv_events/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.Session.html#start/2","title":"RigInboundGatewayWeb.Session.start/2","type":"function"},{"doc":"Publish a CloudEvent.","ref":"RigInboundGatewayWeb.V1.EventController.html","title":"RigInboundGatewayWeb.V1.EventController","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGatewayWeb.V1.EventController.html#config/0","title":"RigInboundGatewayWeb.V1.EventController.config/0","type":"function"},{"doc":"Plug action to send a CloudEvent to subscribers.","ref":"RigInboundGatewayWeb.V1.EventController.html#publish/2","title":"RigInboundGatewayWeb.V1.EventController.publish/2","type":"function"},{"doc":"Handling of Longpolling functionalitiy","ref":"RigInboundGatewayWeb.V1.LongpollingController.html","title":"RigInboundGatewayWeb.V1.LongpollingController","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGatewayWeb.V1.LongpollingController.html#config/0","title":"RigInboundGatewayWeb.V1.LongpollingController.config/0","type":"function"},{"doc":"Server-Sent Events (SSE) handler.","ref":"RigInboundGatewayWeb.V1.SSE.html","title":"RigInboundGatewayWeb.V1.SSE","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGatewayWeb.V1.SSE.html#config/0","title":"RigInboundGatewayWeb.V1.SSE.config/0","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.V1.SSE.html#setup_connection/2","title":"RigInboundGatewayWeb.V1.SSE.setup_connection/2","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.V1.SubscriptionController.html","title":"RigInboundGatewayWeb.V1.SubscriptionController","type":"module"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigInboundGatewayWeb.V1.SubscriptionController.html#config/0","title":"RigInboundGatewayWeb.V1.SubscriptionController.config/0","type":"function"},{"doc":"Sets subscriptions for an existing connection, replacing previous subscriptions.There may be multiple subscriptions contained in the request body. Each subscription refers to a single event type and may optionally include a constraint list (conjunctive normal form). Subscriptions that were present in a previous request but are no longer present in this one will be removed.ExampleSingle subscription with a constraint that says &quot;either head_repo equals octocat/Hello-World, or base_repo equals octocat/Hello-World (or both)&quot;:{ &quot;subscriptions&quot;: [ { &quot;eventType&quot;: &quot;com.github.pull.create&quot;, &quot;oneOf&quot;: [ { &quot;head_repo&quot;: &quot;octocat/Hello-World&quot; }, { &quot;base_repo&quot;: &quot;octocat/Hello-World&quot; } ] } ] }","ref":"RigInboundGatewayWeb.V1.SubscriptionController.html#set_subscriptions/2","title":"RigInboundGatewayWeb.V1.SubscriptionController.set_subscriptions/2","type":"function"},{"doc":"Cowboy WebSocket handler.","ref":"RigInboundGatewayWeb.V1.Websocket.html","title":"RigInboundGatewayWeb.V1.Websocket","type":"module"},{"doc":"","ref":"RigInboundGatewayWeb.V1.Websocket.html#do_init/1","title":"RigInboundGatewayWeb.V1.Websocket.do_init/1","type":"function"},{"doc":"Kafka client for RIG.Basically wrapping :brod, tailored to our needs.","ref":"RigKafka.html","title":"RigKafka","type":"module"},{"doc":"See RigKafka.Client.produce/5.","ref":"RigKafka.html#produce/5","title":"RigKafka.produce/5","type":"function"},{"doc":"See RigKafka.Client.produce/6.","ref":"RigKafka.html#produce/6","title":"RigKafka.produce/6","type":"function"},{"doc":"See RigKafka.Client.start_supervised/2.","ref":"RigKafka.html#start/2","title":"RigKafka.start/2","type":"function"},{"doc":"Module responsible for event serialization and deserialization. Manages also connection to Kafka Schema Registry and caching of used schemas.","ref":"RigKafka.Avro.html","title":"RigKafka.Avro","type":"module"},{"doc":"","ref":"RigKafka.Avro.html#decode/2","title":"RigKafka.Avro.decode/2","type":"function"},{"doc":"","ref":"RigKafka.Avro.html#encode/3","title":"RigKafka.Avro.encode/3","type":"function"},{"doc":"","ref":"RigKafka.Avro.html#encoder/2","title":"RigKafka.Avro.encoder/2","type":"function"},{"doc":"","ref":"RigKafka.Avro.html#fetch_schema/2","title":"RigKafka.Avro.fetch_schema/2","type":"function"},{"doc":"The Kafka client that holds connections to one or more brokers.","ref":"RigKafka.Client.html","title":"RigKafka.Client","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RigKafka.Client.html#child_spec/1","title":"RigKafka.Client.child_spec/1","type":"function"},{"doc":"","ref":"RigKafka.Client.html#produce/5","title":"RigKafka.Client.produce/5","type":"function"},{"doc":"","ref":"RigKafka.Client.html#produce/6","title":"RigKafka.Client.produce/6","type":"function"},{"doc":"","ref":"RigKafka.Client.html#start_link/1","title":"RigKafka.Client.start_link/1","type":"function"},{"doc":"","ref":"RigKafka.Client.html#start_supervised/2","title":"RigKafka.Client.start_supervised/2","type":"function"},{"doc":"","ref":"RigKafka.Client.html#stop_supervised/1","title":"RigKafka.Client.stop_supervised/1","type":"function"},{"doc":"","ref":"RigKafka.Client.html#t:callback/0","title":"RigKafka.Client.callback/0","type":"type"},{"doc":"","ref":"RigKafka.Client.html#t:kafka_headers/0","title":"RigKafka.Client.kafka_headers/0","type":"type"},{"doc":"The group subscriber process handles messages from none or many partitions.","ref":"RigKafka.Client.GroupSubscriber.html","title":"RigKafka.Client.GroupSubscriber","type":"module"},{"doc":"","ref":"RigKafka.Client.GroupSubscriber.html#kafka_message/1","title":"RigKafka.Client.GroupSubscriber.kafka_message/1","type":"macro"},{"doc":"","ref":"RigKafka.Client.GroupSubscriber.html#kafka_message/2","title":"RigKafka.Client.GroupSubscriber.kafka_message/2","type":"macro"},{"doc":"","ref":"RigKafka.Client.GroupSubscriber.html#t:kafka_headers/0","title":"RigKafka.Client.GroupSubscriber.kafka_headers/0","type":"type"},{"doc":"Kafka connection configuration.","ref":"RigKafka.Config.html","title":"RigKafka.Config","type":"module"},{"doc":"","ref":"RigKafka.Config.html#new/1","title":"RigKafka.Config.new/1","type":"function"},{"doc":"","ref":"RigKafka.Config.html#valid?/1","title":"RigKafka.Config.valid?/1","type":"function"},{"doc":"","ref":"RigKafka.Config.html#t:broker/0","title":"RigKafka.Config.broker/0","type":"type"},{"doc":"","ref":"RigKafka.Config.html#t:sasl_config/0","title":"RigKafka.Config.sasl_config/0","type":"type"},{"doc":"","ref":"RigKafka.Config.html#t:ssl_config/0","title":"RigKafka.Config.ssl_config/0","type":"type"},{"doc":"","ref":"RigKafka.Config.html#t:t/0","title":"RigKafka.Config.t/0","type":"type"},{"doc":"","ref":"RigKafka.Config.html#t:topic/0","title":"RigKafka.Config.topic/0","type":"type"},{"doc":"Interface for event serialization and deserialization. Used to decide which serializer to use, such as Apache Avro.","ref":"RigKafka.Serializer.html","title":"RigKafka.Serializer","type":"module"},{"doc":"","ref":"RigKafka.Serializer.html#add_prefix/1","title":"RigKafka.Serializer.add_prefix/1","type":"function"},{"doc":"","ref":"RigKafka.Serializer.html#decode_body!/3","title":"RigKafka.Serializer.decode_body!/3","type":"function"},{"doc":"","ref":"RigKafka.Serializer.html#encode_body/3","title":"RigKafka.Serializer.encode_body/3","type":"function"},{"doc":"","ref":"RigKafka.Serializer.html#encode_body/4","title":"RigKafka.Serializer.encode_body/4","type":"function"},{"doc":"","ref":"RigKafka.Serializer.html#remove_prefix/1","title":"RigKafka.Serializer.remove_prefix/1","type":"function"},{"doc":"Metrics instrumenter for the Rig Control","ref":"RigMetrics.ControlInstrumenter.html","title":"RigMetrics.ControlInstrumenter","type":"module"},{"doc":"","ref":"RigMetrics.ControlInstrumenter.html#add_blacklisted_session/1","title":"RigMetrics.ControlInstrumenter.add_blacklisted_session/1","type":"function"},{"doc":"","ref":"RigMetrics.ControlInstrumenter.html#add_route/1","title":"RigMetrics.ControlInstrumenter.add_route/1","type":"function"},{"doc":"","ref":"RigMetrics.ControlInstrumenter.html#delete_blacklisted_session/1","title":"RigMetrics.ControlInstrumenter.delete_blacklisted_session/1","type":"function"},{"doc":"","ref":"RigMetrics.ControlInstrumenter.html#delete_route/1","title":"RigMetrics.ControlInstrumenter.delete_route/1","type":"function"},{"doc":"Metrics instrumenter for the Rig Eventuhub","ref":"RigMetrics.EventhubInstrumenter.html","title":"RigMetrics.EventhubInstrumenter","type":"module"},{"doc":"","ref":"RigMetrics.EventhubInstrumenter.html#count_dropped_event/1","title":"RigMetrics.EventhubInstrumenter.count_dropped_event/1","type":"function"},{"doc":"","ref":"RigMetrics.EventhubInstrumenter.html#count_forwarded_event/1","title":"RigMetrics.EventhubInstrumenter.count_forwarded_event/1","type":"function"},{"doc":"Wrapper Module for Prometheus.PlugExporter from ex_prometheus","ref":"RigMetrics.MetricsPlugExporter.html","title":"RigMetrics.MetricsPlugExporter","type":"module"},{"doc":"Callback implementation for Plug.call/2.","ref":"RigMetrics.MetricsPlugExporter.html#call/2","title":"RigMetrics.MetricsPlugExporter.call/2","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"RigMetrics.MetricsPlugExporter.html#init/1","title":"RigMetrics.MetricsPlugExporter.init/1","type":"function"},{"doc":"","ref":"RigMetrics.MetricsPlugExporter.html#setup/0","title":"RigMetrics.MetricsPlugExporter.setup/0","type":"function"},{"doc":"Metrics instrumenter for the Rig Proxy","ref":"RigMetrics.ProxyMetrics.html","title":"RigMetrics.ProxyMetrics","type":"module"},{"doc":"Increases the Prometheus counter rig_proxy_request_total","ref":"RigMetrics.ProxyMetrics.html#count_proxy_request/5","title":"RigMetrics.ProxyMetrics.count_proxy_request/5","type":"function"},{"doc":"Gets current value of metric rig_proxy_request_total","ref":"RigMetrics.ProxyMetrics.html#get_current_value/5","title":"RigMetrics.ProxyMetrics.get_current_value/5","type":"function"},{"doc":"","ref":"RigMetrics.ProxyMetrics.html#setup/0","title":"RigMetrics.ProxyMetrics.setup/0","type":"function"},{"doc":"Manages the external Java-based Kinesis client application.In Java land this would've been named AmazonKinesisJavaClientManager.","ref":"RigOutboundGateway.Kinesis.JavaClient.html","title":"RigOutboundGateway.Kinesis.JavaClient","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"RigOutboundGateway.Kinesis.JavaClient.html#child_spec/1","title":"RigOutboundGateway.Kinesis.JavaClient.child_spec/1","type":"function"},{"doc":"Returns module configuration.If application environment contains values in Keyword or Map struct, defaults from macro usage will be recursively merged with application configuration.If one of the configuration parameters does not exist or can not be resolved, raises ArgumentError.","ref":"RigOutboundGateway.Kinesis.JavaClient.html#config/0","title":"RigOutboundGateway.Kinesis.JavaClient.config/0","type":"function"},{"doc":"Starts (and awaits) the Java-client for Amazon Kinesis.The process output is discarded. Instead of using stdout to receive Kinesis messages from the Java client, the Java code uses JInterface to RPC RigOutboundGateway.handle_raw/1 directly. This ensures that message boundaries are kept (think newlines in messages) and that console log output doesn't interfere.","ref":"RigOutboundGateway.Kinesis.JavaClient.html#handle_info/2","title":"RigOutboundGateway.Kinesis.JavaClient.handle_info/2","type":"function"},{"doc":"","ref":"RigOutboundGateway.Kinesis.JavaClient.html#java_client_callback/1","title":"RigOutboundGateway.Kinesis.JavaClient.java_client_callback/1","type":"function"},{"doc":"","ref":"RigOutboundGateway.Kinesis.JavaClient.html#start_link/1","title":"RigOutboundGateway.Kinesis.JavaClient.start_link/1","type":"function"},{"doc":"Converts the Java-client output to Elixir log messages.","ref":"RigOutboundGateway.Kinesis.LogStream.html","title":"RigOutboundGateway.Kinesis.LogStream","type":"module"},{"doc":"","ref":"RIG.JWT.DecodeError.html","title":"RIG.JWT.DecodeError","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"RIG.JWT.DecodeError.html#message/1","title":"RIG.JWT.DecodeError.message/1","type":"function"},{"doc":"","ref":"RIG.Subscriptions.Error.html","title":"RIG.Subscriptions.Error","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"RIG.Subscriptions.Error.html#message/1","title":"RIG.Subscriptions.Error.message/1","type":"function"},{"doc":"","ref":"RIG.Subscriptions.Parser.JSON.DecodeError.html","title":"RIG.Subscriptions.Parser.JSON.DecodeError","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"RIG.Subscriptions.Parser.JSON.DecodeError.html#message/1","title":"RIG.Subscriptions.Parser.JSON.DecodeError.message/1","type":"function"},{"doc":"","ref":"RIG.Subscriptions.Parser.JSON.ParseError.html","title":"RIG.Subscriptions.Parser.JSON.ParseError","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"RIG.Subscriptions.Parser.JSON.ParseError.html#message/1","title":"RIG.Subscriptions.Parser.JSON.ParseError.message/1","type":"function"},{"doc":"","ref":"RIG.Subscriptions.Parser.JWT.Error.html","title":"RIG.Subscriptions.Parser.JWT.Error","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"RIG.Subscriptions.Parser.JWT.Error.html#message/1","title":"RIG.Subscriptions.Parser.JWT.Error.message/1","type":"function"},{"doc":"","ref":"Rig.Config.SyntaxError.html","title":"Rig.Config.SyntaxError","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"Rig.Config.SyntaxError.html#message/1","title":"Rig.Config.SyntaxError.message/1","type":"function"},{"doc":"","ref":"Rig.Subscription.ValidationError.html","title":"Rig.Subscription.ValidationError","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"Rig.Subscription.ValidationError.html#message/1","title":"Rig.Subscription.ValidationError.message/1","type":"function"},{"doc":"","ref":"RigInboundGatewayWeb.ConnectionLimit.MaxConnectionsError.html","title":"RigInboundGatewayWeb.ConnectionLimit.MaxConnectionsError","type":"exception"},{"doc":"Callback implementation for Exception.message/1.","ref":"RigInboundGatewayWeb.ConnectionLimit.MaxConnectionsError.html#message/1","title":"RigInboundGatewayWeb.ConnectionLimit.MaxConnectionsError.message/1","type":"function"},{"doc":"ChangelogAll notable changes to this project will be documented in this file.The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.","ref":"changelog.html","title":"Changelog","type":"extras"},{"doc":"AddedSupport publishing events consumed from NATS topics. See the documentation for how to get started. #297Added validation for reverse proxy configuration. Now it crashes RIG on start when configuration is not valid or returns 400 when using REST API to update configuration. #277Added basic distributed tracing support in W3C Trace Context specification with Jaeger and Openzipkin exporters. RIG opens a span at the API Gateway and emits trace context in Cloud Events following the distributed tracing spec. #281Added possibility to set response code for response_from messages in reverse proxy (kafka and http_async). #321Added new version - v3 - for internal endpoints to support response code in the /responses endpointAdded Helm v3 template to the deployment folder #288Added detailed features summary on the website with architecture diagrams. #284Added documentation section for the JWT Blacklist feature. #156Added longpolling examples to the /examples folder #235Support JSON and Google Cloud Logger (GCL) log formats. Set the new environment variable LOG_FMT to JSON or GCL to see this in action. #298Added CORS headers to unauthenticated Proxy requests #344Added rate limiting for maximum number of WS + SSE + Longpolling connections per minute. Configurable via MAX_CONNECTIONS_PER_MINUTE env var, by default it's 5000. #257Added basic setup for the Phoenix LiveDashboard. Now it's accessible at :4010/dashboard. #301ChangedIncorporated cloudevents-ex to handle binary and structured modes for Kafka protocol binding in a proper way. This introduces some breaking changes:Binary mode is now using ce_ prefix for CloudEvents context attribute headers, before it was ce- - done according to the Kafka protocol bindingChange above affects also &quot;response_from&quot;: &quot;kafka&quot; proxy functionality. RIG will forward to clients only Kafka body, no headers. This means, when using binary mode, clients receive only the data part, no CloudEvents context attributes.Changed response_from handler to expect a message in binary format, NOT a cloud event (kafka and http_async). #321Updated Helm v2 template, kubectl yaml file and instructions in the deployment folder #288Publish Helm Chart to Github pages. With this change, we can simply install the chart using helm repo add accenture https://accenture.github.io/reactive-interaction-gateway helm install rig accenture/reactive-interaction-gatewayMore information, follow the deployment Readme. #319make README smaller, easier to read and highlight features. #284FixedFixed a bug where distributed set processes would crash when one of their peers has died but hasn't been removed yet from the pg2 group.Fixed wrong endpoint validation for reverse proxy. Now it should correctly check for path or path_regex. Before it would require path even with path_regex in place. #334RemovedRemoved deprecated or unused code/functionality, these are breaking changes #278:Removed deprecated internal API /v1.Removed deprecated environment variables: PROXY_KAFKA_REQUEST_AVRO, PROXY_KAFKA_REQUEST_TOPIC, PROXY_KINESIS_REQUEST_STREAM. This means that you can set topic and schema for publishing to event streams only in the proxy config as described in the docs.Removed experimental feature Firehose (forwarding events to an HTTP endpoint).Removed path field in proxy configuration. Reason is that the path_regex field is already covering path functionality and thus it doesn't make sense to have both of them. Should cause less confusion and improve maintainability.Migration:&quot;path&quot;: &quot;/foo&quot; -&gt; &quot;path_regex&quot;: &quot;/foo&quot;&quot;path&quot;: &quot;/foo/{id}&quot; -&gt; &quot;path_regex&quot;: &quot;/foo/(.+)&quot; - or pretty much whatever regex you need (e.g. UUID pattern)SecurityUpdate to Erlang/OTP 23.2.2, which fixes a critical TLS certificate verification issue.Technical ImprovementsUpdated dependencies to support OTP 23. We've also replaced the versions file with .tool-versions, which makes it easier for those using the asdf package manager - just run asdf install to obtain the correct versions of Erlang and Elixir. #341","ref":"changelog.html#unreleased","title":"Changelog - Unreleased","type":"extras"},{"doc":"AddedAdded possibility to define Kafka/Kinesis topic and schema per reverse proxy endpoint. The current solution using environment variables is deprecated, but still used as a fallback -- will be removed in the version 3.0. #229Added Kinesis + Localstack example. #229Technical ImprovementsUpgrade the Elixir version to 1.10 for source code and Docker images. Upgrade version for multiple dependencies. #285Added Slackin integration for easier Slack access - check the main page badge! #240","ref":"changelog.html#2-4-0-2020-05-07","title":"Changelog - 2.4.0 - 2020-05-07","type":"extras"},{"doc":"AddedIn addition to SSE and WebSocket, RIG now also supports HTTP long-polling for listening to events. Frontends should only use this as a fallback in situations where neither SSE nor WebSocket is supported by the network. #217When terminating an SSE connection after its associated session has been blacklisted, RIG now sends out a rig.session_killed event before closing the socket. For WebSocket connections, the closing frame contains &quot;Session killed.&quot; as its payload. #261New API for querying and updating the session blacklist: /v2/session-blacklist, which introduces the following breaking changes (/v1/session-blacklist is unaffected) #261:When a session has been added to the session blacklist successfully, the endpoint now uses the correct HTTP status code &quot;201 Created&quot; instead of &quot;200 Ok&quot;.When using the API to blacklist a session, the validityInSeconds should now be passed as an integer value (using a string still works though).FixedFixed usage of external check for SUBMISSION_CHECK and SUBSCRIPTION_CHECK. #241Logging incoming HTTP request to Kafka works again and now also supports Apache Avro. #170Fixed HTTP response for DELETE 4010/v1/apis/api_id and DELETE 4010/v2/apis/api_id to correctly return 204 and no content.RemovedRemoved the JWT_BLACKLIST_DEFAULT_EXPIRY_HOURS environment variable (deprecated since 2.0.0-beta.2). #260SecurityA connection is now associated to its session right after the connection is established, given the request carries a JWT in its authorization header. Previously, this was only done by the subscriptions endpoint, which could cause a connection to remain active even after blacklisting its authorization token. #260Technical ImprovementsUpgrade the Elixir and Erlang versions for source code and Docker images. #211Automated UI-tests using Cypress make sure that all examples work and that code changes do not introduce any unintended API changes. #227Refactor JWT related code in favor of RIG.JWT. #244Fix flaky cypress tests; this shouldn't be an issue anymore when running Travis builds. #265","ref":"changelog.html#2-3-0-2019-12-13","title":"Changelog - 2.3.0 - 2019-12-13","type":"extras"},{"doc":"ChangedIncreased maximum number of Erlang ports from 4096 to 65536 to allow more HTTP connections.","ref":"changelog.html#2-2-1-2019-06-21","title":"Changelog - 2.2.1 - 2019-06-21","type":"extras"},{"doc":"AddedNew Prometheus metric: rig_proxy_requests_total. For details see metrics-details.md. #157The respond-via-Kafka feature uses a correlation ID for associating the response with the original request. This correlation ID is now cryptographically verified, which prevents an attacker on the internal network to reroute responses to other users connected to RIG. #218Apache Avro is now supported for consuming from, and producing to, Kafka. The implementation uses the Confluent Schema Registry to fetch Avro schemas.Added new set of topics in documentation about the API Gateway, even streams and scaling.Added examples section to the documentation website.Added new response_from option -- http_async together with new internal POST endpoint /v1/responses. You can send correlated response to /v1/responses and complete initial Proxy request. #213Implement HTTP Transport Binding for CloudEvents v0.2. A special fallback to &quot;structured mode&quot; in case the content type is &quot;application/json&quot; and the &quot;ce-specversion&quot; header is not set ensures this change is backward compatible with existing setups. #153New request body format for endpoints with kafka and kinesis targets; see Deprecated below.ChangedThe environment variable KAFKA_GROUP_ID has been replaced with the following environment variables, where each of them has a distinct default value: KAFKATOFILTER_KAFKA_GROUP_ID, KAFKATOHTTP_KAFKA_GROUP_ID, PROXY_KAFKA_RESPONSE_KAFKA_GROUP_ID. #206The default Kafka source topic for the Kafka-to-HTTP event stream has been changed to rig. The feature was introduced to forward all incoming events to an (external) HTTP endpoint, so it makes sense to use the default topic for incoming events here too.Changed :refresh_subscriptions GenServer handler from call to cast to improve performance. #224FixedFixed a bug that caused the subscriptions endpoint to return an internal server error when running RIG in a clustered setup. #194Support for forwarding HTTP/1.1 responses over a HTTP/2 connection by dropping connection-related HTTP headers. #193Added missing id field to swagger spec for message API.Fixed random generation of group IDs for Kafka consumer groups. This led to wrong partition distribution when using multiple RIG nodes. Now consumers will have the same ID which can be changed via environment variable - defaults to rig.When forwarding an HTTP request, the Host request header is now set to the target_url defined by the proxy configuration. #188Fixed missing swagger.json file in production Docker image.Added missing CORS headers for Kafka/Kinesis target type when not using response_from.Fixed schema registry validation when using binary messages in Kafka consumer. #202Forwarding events to HTTP did not contain (all) Kafka messages, as the Kafka consumer group ID was shared with the consumer for forwarding events to frontends. #206DeprecatedEndpoints configured with target kafka or kinesis now expect a different body format (that is, the previous format is deprecated). This aligns the request body format with the other endpoints that accept CloudEvents.For example, instead of using this:{ &quot;partition&quot;: &quot;the-partition-key&quot;, &quot;event&quot;: { &quot;specversion&quot;: &quot;0.2&quot;, &quot;type&quot;: &quot;what_has_happened&quot;, &quot;source&quot;: &quot;ui&quot;, &quot;id&quot;: &quot;123&quot; } }you should put the partition key in the CloudEvent's &quot;rig&quot; extension instead:{ &quot;specversion&quot;: &quot;0.2&quot;, &quot;rig&quot;: { &quot;target_partition&quot;: &quot;the-partition-key&quot; }, &quot;type&quot;: &quot;what_has_happened&quot;, &quot;source&quot;: &quot;ui&quot;, &quot;id&quot;: &quot;123&quot; }","ref":"changelog.html#2-2-0-2019-06-17","title":"Changelog - 2.2.0 - 2019-06-17","type":"extras"},{"doc":"AddedWhen using the proxy, RIG will now add an additional Forwarded header. #113Increased length of header value in HTTP requests to 16384 to support long tokens for SAML.ChangedHTTPS certificates may now be passed using absolute paths. (Previously, the locations of the HTTPS certificates were limited to the OTP-applications' priv directories rig_api/priv/cert and rig_inbound_gateway/priv/cert.) Additionally, for security reasons we no longer include the self-signed certificate with the docker image. Please adapt your environment configuration accordingly. #151 #182Validation errors for SSE &amp; WS connections and the subscriptions endpoint should now be a lot more helpful. Invalid JWTs, as well as invalid subscriptions, cause the endpoints to respond with an error immediately. #54 #164FixedParsing of JSON files in proxy module - api.id was expected to be an atom, but when using files it's a string.Kinesis: Support for CloudEvents versions 0.1 and 0.2.Fixed channels example with latest RIG API changes.Fixed sse/ws examples to use JWT inferred subscriptions correctly.","ref":"changelog.html#2-1-1-2019-03-27","title":"Changelog - 2.1.1 - 2019-03-27","type":"extras"},{"doc":"AddedPrometheus monitoring endpoint. #96The proxy configuration can now also be passed as a JSON string. This allows to run the Docker image in environments where mounting a file in a container is not possible. #159RemovedRate limiting. #144","ref":"changelog.html#2-1-0-2019-02-15","title":"Changelog - 2.1.0 - 2019-02-15","type":"extras"},{"doc":"FixedUpgraded a dependency to fix the Docker build. #149","ref":"changelog.html#2-0-2-2019-01-20","title":"Changelog - 2.0.2 - 2019-01-20","type":"extras"},{"doc":"FixedA library upgrade caused idle SSE connections to time out after 60 seconds. This timeout is now disabled. #148","ref":"changelog.html#2-0-1-2019-01-20","title":"Changelog - 2.0.1 - 2019-01-20","type":"extras"},{"doc":"AddedHTTP/2 and HTTPS support. #34The SSE and WebSocket endpoints now take a &quot;subscriptions&quot; parameter that allows to create (manual) subscriptions (JSON encoded list). This has the same effect as establishing a connection and calling the subscriptions endpoint afterwards.OpenAPI (Swagger) documentation for RIG's internal API. #116Support for the CloudEvents v0.2 format. #112In API definitions regular expressions can now be used to define matching request paths. Also, request paths can be rewritten (see api.ex for an example). #88ChangedThe SSE and WebSocket endpoints' &quot;token&quot; parameter is renamed to &quot;jwt&quot; (to not confuse it with the connection token).When forwarding requests, RIG related meta data (e.g. correlation ID) in CloudEvents is now put into an object under the top-level key &quot;rig&quot;. Note that in terms of the current CloudEvents 0.2 specification this makes &quot;rig&quot; an extension. Also, all RIG related keys have been renamed from snake_case to camelCase.Previously API definitions for proxy were turning on security check for endpoints by not_secured: false which is a bit confusing -- changed to more readable form secured: true.No longer assumes the &quot;Bearer&quot; token type when no access token type is prepended in the Authorization header. Consequently, a client is expected to explicitly use &quot;Bearer&quot; for sending its JWT authorization token. More more details, see RFC 6749.All events that RIG creates are now in CloudEvents v0.2 format (before: CloudEvents v0.1).When using Kafka or Kinesis as the target, connection related data is added to the event before publishing it to the respective topic/partition. With the introduction of CloudEvents v0.2, RIG now follows the CloudEvent extension syntax with all fields put into a common top-level object called &quot;rig&quot;. Additionally, the object's field names have been changed slightly to prevent simple mistakes like case-sensitivity issues. Also, the expected request body fields have been renamed to be more descriptive. To that end, usage information returned as plaintext should help the API user in case of a Bad Request.FixedExtractor configuration reloadFixed response to CORS related preflight request.","ref":"changelog.html#2-0-0-2019-01-16","title":"Changelog - 2.0.0 - 2019-01-16","type":"extras"},{"doc":"AddedJWT now supports RS256 algorithm in addition to HS256. #84Support Kafka SSL and SASL/Plain authentication. #79Add new endpoints at /_rig/v1/ for subscribing to CloudEvents using SSE/WS, for creating subscriptions to specific event types, and for publishing CloudEvents. #90Expose setting for proxy response timeout. #91Subscriptions inference using JWT on SSE/WS connection and subscription creation. #90Allow publishing events to Kafka and Kinesis via reverse-proxy HTTP calls. Optionally, a response can be waited for (using a correlation ID).Simple event subscription examples for SSE and WS.Kafka/Kinesis firehose - set topic/stream to consume and invoke HTTP request when event is consumed.ChangedSSE heartbeats are now sent as comments rather than events, and events without data carry an empty data line to improve cross-browser compatibility. #64General documentation and outdated info.RemovedPrevious SSE/WS communication via Phoenix channels.Events that don't follow the CloudEvents spec are no longer supported (easy migration: put your event in a CloudEvent's data field).FixedFlaky tests in router_test.exs -- switching from Bypass to Fakeserver. #74Channels example. #64","ref":"changelog.html#2-0-0-beta-2-2018-11-09","title":"Changelog - 2.0.0-beta.2 - 2018-11-09","type":"extras"},{"doc":"AddedAmazon Kinesis integration. #27Use lazy logger calls for debug logs.Format (most files) using Elixir 1.6 formatter.Add new endpoint POST /messages for sending messages (=&gt; Kafka is no longer a hard dependency).Add a dedicated developer guide.Release configuration in rel/config.exs and custom vm.args (based on what distillery is using). #29Production configuration for peerage to use DNS discovery. #29Module for auto-discovery, using Peerage library. #29Kubernetes deployment configuration file. #29Smoke tests setup and test cases for API Proxy and Kafka + Phoenix messaging. #42Kafka consumer ready check utility function. #42List of all environment variables possible to set in guides/operator-guide.md. #36Possibility to set logging level with env var LOG_LEVEL. #49Variations of Dockerfiles - basic version and AWS version. #44Helm deployment chart. #59Proxy is now able to do request header transformations. #76ChangedEndpoint for terminating a session no longer contains user id in path.Convert to umbrella project layout.Move documentation from doc/ to guides/ as the former is the default for ex_doc output.Revised request logging (currently Kafka and console as backends).Disable WebSocket timeout. #58Dockerfile to use custom vm.args file &amp; removed mix release.init step. #29FixedMake presence channel respect JWT_USER_FIELD setting (currently hardcoded to &quot;username&quot;).Set proper environment variable for Phoenix server INBOUND_PORT. #38Set proper environment variable for Phoenix server API_PORT. #38Channels example fixed to be compatible with version 2.0.0. #40User defined query auth values are no longer overridden by JWT auth type.Handle content-type correctly. #61More strict regex match for routes in proxy. #76Downcased response headers to avoid duplicates in proxy. #76","ref":"changelog.html#2-0-0-beta-1-2018-06-21","title":"Changelog - 2.0.0-beta.1 - 2018-06-21","type":"extras"},{"doc":"AddedBasic Travis configuration. #17Configuration ADR document. #19Websocket and SSE channels example. #22Maintain changelog file. #25ChangedIncrease default rate limits. #16Make producing of Kafka messages in proxy optional (and turned off by default). #21FixedFix Travis by disabling credo rule Design.AliasUsage. #18","ref":"changelog.html#1-1-0-2018-01-11","title":"Changelog - 1.1.0 - 2018-01-11","type":"extras"},{"doc":"AddedAdd mix docs script to generate documentation of code base. #6Add ethics documentation such as code of conduct and contribution guidelines. #6ChangedUpdate configuration to be able to modify almost anything by environment variables on RIG start. #5Rework Dockerfile to use multistage approach for building RIG Docker image. #9Update entire code base to use rig keyword. #13RemovedDisable Origin checking. #12","ref":"changelog.html#1-0-0-2017-11-09","title":"Changelog - 1.0.0 - 2017-11-09","type":"extras"}]