# Basic broker and listener configuration
broker.id=0
listeners=SASL_SSL://kafka.kerberos-demo.local:9093
# advertised.listeners=SASL_SSL://kafka.kerberos-demo.local:9093
zookeeper.connect=zookeeper.kerberos-demo.local:2181
log.dirs=/var/lib/kafka

offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
num.partitions=12


# Kerberos / GSSAPI Authentication mechanism
sasl.enabled.mechanisms=GSSAPI
sasl.kerberos.service.name=kafka


# Configure replication to require Kerberos:
sasl.mechanism.inter.broker.protocol=GSSAPI
security.inter.broker.protocol=SASL_SSL


# Authorization config:
authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer
zookeeper.set.acl=true
allow.everyone.if.no.acl.found=true
# super.users=User:admin;User:kafka
super.users=User:CN=admin.kerberos-demo.local,L=London,O=Confluent,C=UK;User:CN=kafka.kerberos-demo.local,L=London,O=Confluent,C=UK


# Demonstrate setting up the Confluent Metrics Reporter with required *client* credentials
metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
confluent.metrics.reporter.bootstrap.servers=SASL_SSL://kafka.kerberos-demo.local:9093
confluent.metrics.reporter.sasl.mechanism=GSSAPI
confluent.metrics.reporter.security.protocol=SASL_SSL
confluent.metrics.reporter.sasl.kerberos.service.name=kafka
confluent.metrics.reporter.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="/var/lib/secret/kafka-admin.key" \
   principal="admin/admin.kerberos-demo.local@TEST.CONFLUENT.IO";

confluent.metrics.reporter.topic.replicas=1
confluent.support.metrics.enable=false
confluent.support.customer.id=anonymous
confluent.metrics.reporter.ssl.truststore.location=/var/lib/secret/certs/truststore.jks
confluent.metrics.reporter.ssl.truststore.password=test1234
confluent.metrics.reporter.ssl.keystore.location=/var/lib/secret/certs/kafka-client.keystore.jks
confluent.metrics.reporter.ssl.keystore.password=test1234
confluent.metrics.reporter.ssl.key.password=test1234

# TLS Configuration
ssl.truststore.location=/var/lib/secret/certs/truststore.jks
ssl.truststore.password=test1234
ssl.keystore.location=/var/lib/secret/certs/server.keystore.jks
ssl.keystore.password=test1234
ssl.client.auth=required
