stages:
  - unittest
  - exampletest
  - name: dockerbuild
    if: branch = master
  - name: website
    if: branch = master AND type != pull_request
  - name: sourcedocs
    if: branch = master AND type != pull_request

jobs:
  include:
    - stage: unittest
      language: elixir
      elixir: "1.7"
      otp_release: "21.0"
      env:
        - MIX_ENV=test
      script:
        - mix test
        - mix credo --ignore-checks Design
    - stage: exampletest
      language: node_js
      node_js:
        - "10"
      addons:
        apt:
          packages:
            - libgconf-2-4
      cache:
        npm: true
        directories:
          - ~/.cache
      # install:
      #   - npm ci
      script:
        # - $(npm bin)/cypress run --record
        - docker build -t rig .
        - cd examples/tests
        - npm ci
        - |
          docker run -d --name rig \
          -e EXTRACTORS='{"greeting":{"name":{"stable_field_index":1,"event":{"json_pointer":"/data/name"}}},"greeting.jwt":{"name":{"stable_field_index":1,"jwt":{"json_pointer":"/username"},"event":{"json_pointer":"/data/name"}}},"nope":{"fullname":{"stable_field_index":1,"jwt":{"json_pointer":"/fullname"},"event":{"json_pointer":"/data/fullname"}}},"example":{"email":{"stable_field_index":1,"event":{"json_pointer":"/data/email"}}}}' \
          -e JWT_SECRET_KEY=secret \
          -p 4000:4000 \
          rig
        - npm run cypress:run:noauth
        - |
          docker run -d --name rig \
          -e SUBSCRIPTION_CHECK=jwt_validation \
          -e EXTRACTORS='{"greeting":{"name":{"stable_field_index":1,"event":{"json_pointer":"/data/name"}}},"greeting.jwt":{"name":{"stable_field_index":1,"jwt":{"json_pointer":"/username"},"event":{"json_pointer":"/data/name"}}},"nope":{"fullname":{"stable_field_index":1,"jwt":{"json_pointer":"/fullname"},"event":{"json_pointer":"/data/fullname"}}},"example":{"email":{"stable_field_index":1,"event":{"json_pointer":"/data/email"}}}}' \
          -e JWT_SECRET_KEY=secret \
          -p 4000:4000 \
          rig
        - npm run cypress:run:jwt
    - stage: dockerbuild
      language: minimal
      services:
        - docker
      script:
        - docker build .
    - stage: website
      language: node_js
      node_js:
        - "8"
      cache:
        yarn: true
      script:
        - git config --global user.name "${GH_NAME}"
        - git config --global user.email "${GH_EMAIL}"
        - echo "machine github.com login ${GH_NAME} password ${GH_TOKEN}" > ~/.netrc
        - cd website && yarn install && GIT_USER="${GH_NAME}" yarn run publish-gh-pages
    - stage: sourcedocs
      language: elixir
      elixir: "1.7"
      otp_release: "21.0"
      script:
        - git config --global user.name "${GH_NAME}"
        - git config --global user.email "${GH_EMAIL}"
        - echo "machine github.com login ${GH_NAME} password ${GH_TOKEN}" > ~/.netrc
        - GIT_USER="${GH_NAME}" mix publish_gh_pages
